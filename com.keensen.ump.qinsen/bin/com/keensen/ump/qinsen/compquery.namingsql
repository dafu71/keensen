<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="com.keensen.ump.qinsen.compquery">
    <!-- 查询产品综合信息记录列表 -->
    <select id="query" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
	SELECT T1.RECORD_ID          AS "recordId",
       T1.JUANMO_BATCH_ID    AS "juanmoBatchId",
       T1.BATCH_NO           AS "batchNo",
       T1.LINE_ID            AS "lineId",
       T1.PROD_SPEC_ID       AS "prodSpecId",
       T1.ORDER_NO           AS "orderNo",
       T1.PRODUCE_DT         AS "produceDt",
       T1.PRESURE            AS "presure",
       T1.CHECK_RESULT       AS "checkResult",
       T1.IS_QUALIFIED       AS "isQualified",
       T1.IS_FIRST           AS "isFirst",
       T1.STD_STR            AS "stdStr",
       T1.TEAM_ID            AS "teamId",
       T1.WORKER_ID          AS "workerId",
       T1.NG_REASON_ID       AS "ngReasonId",
       T1.REMARK             AS "remark",
       T1.JUDGE_FLAG         AS "judgeFlag",
       T1.NG_ITEM            AS "ngItem",
       T1.JUDGER_ID          AS "judgerId",
       T1.JUDGE_DT           AS "judgeDt",
       T1.PROD_SPEC_AREA     AS "prodSpecArea",
       T1.PROD_SPEC_CODE     AS "prodSpecCode",
       T1.PROD_SPEC_NAME     AS "prodSpecName",
       T1.JUANMO_BATCH_NO    AS "juanmoBatchNo",
       T1.JUANMO_LINE_ID     AS "juanmoLineId",
       T1.IS_TRIAL           AS "isTrial",
       T1.JUANMO_ORDER_NO    AS "juanmoOrderNo",
       T1.JUANMO_SPEC_ID     AS "juanmoSpecId",
       T1.BLANKING_SIZE      AS "blankingSize",
       T1.DENSE_NET          AS "denseNet",
       T1.PAGE_WIDTH         AS "pageWidth",
       T1.JUANMO_DT          AS "juanmoDt",
       T1.JUANMO_TEAM_ID     AS "juanmoTeamId",
       T1.JUANMO_WORKER_ID   AS "juanmoWorkerId",
       T1.JUANMO_REMARK      AS "juanmoRemark",
       T1.IS_QUALIFIED_NAME  AS "isQualifiedName",
       T1.IS_FIRST_NAME      AS "isFirstName",
       T1.JUDGE_FLAG_NAME    AS "judgeFlagName",
       T1.PRODUCE_DATE       AS "produceDate",
       T1.JUDGE_DATE         AS "judgeDate",
       T1.NG_REASON_CODE     AS "ngReasonCode",
       T1.NG_REASON_NAME     AS "ngReasonName",
       T1.TEAM_NAME          AS "teamName",
       T1.WORKER_NAME        AS "workerName",
       T1.JUDGER_NAME        AS "judgerName",
       T1.LINE_CODE          AS "lineCode",
       T1.IS_TRIAL_NAME      AS "isTrialName",
       T1.JUANMO_LINE_CODE   AS "juanmoLineCode",
       T1.JUANMO_SPEC_CODE   AS "juanmoSpecCode",
       T1.JUANMO_SPEC_NAME   AS "juanmoSpecName",
       T1.JUANMO_DATE        AS "juanmoDate",
       T1.JUANMO_TEAM_NAME   AS "juanmoTeamName",
       T1.JUANMO_WORKER_NAME AS "juanmoWorkerName",
       T1.IN_PAGE_CNT        AS "inPageCnt",
       T1.IN_PAGE_LENGTH     AS "inPageLength",
       T1.PAGE_CNT           AS "pageCnt",
       T1.PAGE_LENGTH        AS "pageLength",
       T1.CDM_BATCH_STR      AS "cdmBatchStr",
       T1.TUMO_BATCH_STR     AS "tumoBatchStr",
       T1.DIMO_BATCH_STR     AS "dimoBatchStr",
       T1.IS_MIX_STR         AS "isMixStr",
       T1.PAGE_CNT_STR       AS "pageCntStr",
       T1.APPLY_JUDGE_RESULT AS "applyJudgeResult",
       T1.APPLY_TIME         AS "applyTime"
  FROM (
        
        SELECT Z.*,
                DECODE(Z.IS_QUALIFIED, 'Y', '是', 'N', '否', '') IS_QUALIFIED_NAME,
                DECODE(Z.IS_FIRST, 'Y', '首检', 'N', '复检', '') IS_FIRST_NAME,
                DECODE(Z.JUDGE_FLAG, 'Y', '是', 'N', '否', '') JUDGE_FLAG_NAME,
                TO_CHAR(Z.PRODUCE_DT, 'YYYY-MM-DD HH24:MI') PRODUCE_DATE,
                TO_CHAR(Z.JUDGE_DT, 'YYYY-MM-DD HH24:MI') JUDGE_DATE,
                QINSEN.PG_GET_INFO.GET_PROP_VALUE_CODE_BY_ID(Z.NG_REASON_ID) NG_REASON_CODE,
                QINSEN.PG_GET_INFO.GET_PROP_VALUE_NAME_BY_ID(Z.NG_REASON_ID) NG_REASON_NAME,
                QINSEN.PG_GET_INFO.GET_DEPT_NAME_BY_ID(Z.TEAM_ID) TEAM_NAME,
                QINSEN.PG_GET_INFO.GET_STAFF_NAME_BY_ID(Z.WORKER_ID) WORKER_NAME,
                QINSEN.PG_GET_INFO.GET_STAFF_NAME_BY_ID(Z.JUDGER_ID) JUDGER_NAME,
                QINSEN.PG_GET_INFO.GET_PROD_LINE_CODE_BY_ID(Z.LINE_ID) LINE_CODE,
                
                DECODE(Z.IS_TRIAL, 'Y', '是', 'N', '否', '') IS_TRIAL_NAME,
                QINSEN.PG_GET_INFO.GET_PROD_LINE_CODE_BY_ID(Z.JUANMO_LINE_ID) JUANMO_LINE_CODE,
                QINSEN.PG_GET_INFO.GET_MATER_SPEC_CODE_BY_ID(Z.JUANMO_SPEC_ID) JUANMO_SPEC_CODE,
                QINSEN.PG_GET_INFO.GET_MATER_SPEC_NAME_BY_ID(Z.JUANMO_SPEC_ID) JUANMO_SPEC_NAME,
                TO_CHAR(Z.JUANMO_DT, 'YYYY-MM-DD HH24:MI') JUANMO_DATE,
                QINSEN.PG_GET_INFO.GET_DEPT_NAME_BY_ID(Z.JUANMO_TEAM_ID) JUANMO_TEAM_NAME,
                QINSEN.PG_GET_INFO.GET_STAFF_NAME_BY_ID(Z.JUANMO_WORKER_ID) JUANMO_WORKER_NAME,
                
                (SELECT SUM(D.IN_QUANTITY)
                   FROM QINSEN.INST_JUANMO_DETAIL D
                  WHERE D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) IN_PAGE_CNT,
                (SELECT SUM(D.IN_QUANTITY) * Z.BLANKING_SIZE
                   FROM QINSEN.INST_JUANMO_DETAIL D
                  WHERE D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) IN_PAGE_LENGTH,
                (SELECT SUM(D.OUT_QUANTITY)
                   FROM QINSEN.INST_JUANMO_DETAIL D
                  WHERE D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) PAGE_CNT,
                (SELECT SUM(D.OUT_QUANTITY) * Z.BLANKING_SIZE
                   FROM QINSEN.INST_JUANMO_DETAIL D
                  WHERE D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) PAGE_LENGTH,
                
                (SELECT WM_CONCAT(DISTINCT C.BATCH_NO)
                   FROM QINSEN.INST_JUANMO_DETAIL D, QINSEN.INST_CAIDIEMO C
                  WHERE D.CDM_BATCH_ID = C.RECORD_ID
                    AND D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) CDM_BATCH_STR,
                (SELECT WM_CONCAT(DISTINCT M.BATCH_NO)
                   FROM QINSEN.INST_JUANMO_DETAIL D,
                        QINSEN.INST_CAIDIEMO      C,
                        QINSEN.INST_TUMO          M
                  WHERE D.CDM_BATCH_ID = C.RECORD_ID
                    AND C.TUMO_BATCH_ID = M.RECORD_ID
                    AND D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) TUMO_BATCH_STR,
                (SELECT WM_CONCAT(DISTINCT M.DIMO_BATCH_NO)
                   FROM QINSEN.INST_JUANMO_DETAIL D,
                        QINSEN.INST_CAIDIEMO      C,
                        QINSEN.INST_TUMO          M
                  WHERE D.CDM_BATCH_ID = C.RECORD_ID
                    AND C.TUMO_BATCH_ID = M.RECORD_ID
                    AND D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) DIMO_BATCH_STR,
                (SELECT DECODE(COUNT(1), 1, '否', '是')
                   FROM QINSEN.INST_JUANMO_DETAIL D
                  WHERE D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) IS_MIX_STR,
                (SELECT WM_CONCAT(D.OUT_QUANTITY)
                   FROM QINSEN.INST_JUANMO_DETAIL D
                  WHERE D.MAIN_BATCH_ID = Z.JUANMO_BATCH_ID) PAGE_CNT_STR                 
                  
                 
                  
                 <!-- 
                DECODE((SELECT COUNT(1)
                         FROM QINSEN.INST_PROD_APPLY_JUDGE  AJ,
                              QINSEN.INST_PROD_APPLY_DETAIL AD
                        WHERE Z.BATCH_NO = AD.BATCH_NO
                          AND AD.APPLY_ID = AJ.APPLY_ID
                          AND AJ.IS_QUALIFIED = 'Y'),
                       0,
                       '',
                       '合格入库') APPLY_JUDGE_RESULT,
                (SELECT TO_CHAR(MAX(AJ.CREATE_DT), 'YYYY-MM-DD HH24:MI:SS')
                   FROM QINSEN.INST_PROD_APPLY_JUDGE  AJ,
                        QINSEN.INST_PROD_APPLY_DETAIL AD
                  WHERE Z.BATCH_NO = AD.BATCH_NO
                    AND AD.APPLY_ID = AJ.APPLY_ID
                    AND AJ.IS_QUALIFIED = 'Y') APPLY_TIME-->
          FROM (SELECT T.*
                   FROM (
                         
                         SELECT A.RECORD_ID,
                                 A.JUANMO_BATCH_ID,
                                 A.BATCH_NO,
                                 A.LINE_ID,
                                 A.PROD_SPEC_ID,
                                 A.ORDER_NO,
                                 A.PRODUCE_DT,
                                 A.PRESURE,
                                 A.CHECK_RESULT,
                                 A.IS_QUALIFIED,
                                 A.IS_FIRST,
                                 A.STD_STR,
                                 A.TEAM_ID,
                                 A.WORKER_ID,
                                 A.NG_REASON_ID,
                                 A.REMARK,
                                 A.JUDGE_FLAG,
                                 A.NG_ITEM,
                                 A.JUDGER_ID,
                                 A.JUDGE_DT,
                                 MS.AREA            PROD_SPEC_AREA,
                                 MS.MATER_SPEC_CODE PROD_SPEC_CODE,
                                 MS.MATER_SPEC_NAME PROD_SPEC_NAME,
                                 J.BATCH_NO         JUANMO_BATCH_NO,
                                 J.LINE_ID          JUANMO_LINE_ID,
                                 J.IS_TRIAL,
                                 J.ORDER_NO         JUANMO_ORDER_NO,
                                 J.PROD_SPEC_ID     JUANMO_SPEC_ID,
                                 J.BLANKING_SIZE,
                                 J.DENSE_NET,
                                 J.PAGE_WIDTH,
                                 J.PRODUCE_DT       JUANMO_DT,
                                 J.TEAM_ID          JUANMO_TEAM_ID,
                                 J.WORKER_ID        JUANMO_WORKER_ID,
                                 J.REMARK           JUANMO_REMARK
                                 
                                 ,CHK.create_time APPLY_TIME, 
                                 CASE WHEN CHK.STORAGE IS NOT NULL THEN '合格入库' ELSE '' END APPLY_JUDGE_RESULT
                                 
                           FROM QINSEN.INST_QIJIAN      A
                            LEFT JOIN ( SELECT batch_no, MAX(create_time) create_time,MAX(STORAGE) STORAGE from (
                select t.batch_no,to_char(h.create_time,'YYYY-MM-DD HH24:MI:SS') create_time,H.STORAGE from KS_COMPONENT_CHECK_LIST t
                LEFT JOIN KS_COMPONENT_CHECK_HEAD h
                ON t.relation_id = h.id)
                GROUP BY batch_no) CHK ON A.BATCH_NO = CHK.BATCH_NO
                           ,
                                 QINSEN.INST_JUANMO_MAIN J,
                                 QINSEN.PARA_MATER_SPEC  MS
                          WHERE A.JUANMO_BATCH_ID = J.RECORD_ID
                            AND A.PROD_SPEC_ID = MS.MATER_SPEC_ID
                            
                            <isNotNull prepend="" property="orderNo">AND A.ORDER_NO = #orderNo#</isNotNull>
        <isNotNull prepend="" property="batchNo">AND A.BATCH_NO = UPPER(#batchNo#)</isNotNull>
        <isNotNull prepend="" property="batchNoStr">AND A.BATCH_NO LIKE '%' || UPPER(#batchNoStr#) || '%'</isNotNull>
        <isNotNull prepend="" property="lineId">AND A.LINE_ID = #lineId#</isNotNull>
        <isNotNull prepend="" property="prodSpecId">AND A.PROD_SPEC_ID = #prodSpecId#</isNotNull>
        <isNotNull prepend="" property="teamId">AND A.TEAM_ID = #teamId#</isNotNull>
        <isNotNull prepend="" property="produceBeginDate">AND A.PRODUCE_DT &gt;= TO_DATE(#produceBeginDate#, 'YYYY-MM-DD HH24:MI')</isNotNull>
        <isNotNull prepend="" property="produceEndDate">AND A.PRODUCE_DT &lt; TO_DATE(#produceEndDate#, 'YYYY-MM-DD HH24:MI')</isNotNull>
        <isNotNull prepend="" property="juanMoBatchNo">AND J.BATCH_NO = UPPER(#juanMoBatchNo#)</isNotNull>
        <isNotNull prepend="" property="dimoBatchNo">AND EXISTS
								 (SELECT 1
							          FROM QINSEN.INST_JUANMO_DETAIL D, QINSEN.INST_CAIDIEMO C, QINSEN.INST_TUMO M
							         WHERE J.RECORD_ID = D.MAIN_BATCH_ID
							           AND D.CDM_BATCH_ID = C.RECORD_ID
							           AND C.TUMO_BATCH_ID = M.RECORD_ID
							           AND M.DIMO_BATCH_NO = #dimoBatchNo#)</isNotNull>
        <isNotNull prepend="" property="tumoBatchNo">AND EXISTS
								 (SELECT 1
							          FROM QINSEN.INST_JUANMO_DETAIL D, QINSEN.INST_CAIDIEMO C, QINSEN.INST_TUMO M
							         WHERE J.RECORD_ID = D.MAIN_BATCH_ID
							           AND D.CDM_BATCH_ID = C.RECORD_ID
							           AND C.TUMO_BATCH_ID = M.RECORD_ID
							           AND M.BATCH_NO = #tumoBatchNo#)</isNotNull>
        <isNotNull prepend="" property="tumoBatchNoStr">AND EXISTS
								 (SELECT 1
							          FROM QINSEN.INST_JUANMO_DETAIL D, QINSEN.INST_CAIDIEMO C, QINSEN.INST_TUMO M
							         WHERE J.RECORD_ID = D.MAIN_BATCH_ID
							           AND D.CDM_BATCH_ID = C.RECORD_ID
							           AND C.TUMO_BATCH_ID = M.RECORD_ID
							           AND M.BATCH_NO LIKE '%' || UPPER(#tumoBatchNoStr#) || '%')</isNotNull>
        <isNotNull prepend="" property="cdmBatchNo">AND EXISTS (SELECT 1
							          FROM QINSEN.INST_JUANMO_DETAIL D, QINSEN.INST_CAIDIEMO C
							         WHERE J.RECORD_ID = D.MAIN_BATCH_ID
							           AND D.CDM_BATCH_ID = C.RECORD_ID
							           AND C.BATCH_NO = #cdmBatchNo#)</isNotNull>
        <isNotNull prepend="" property="mpSpecId">AND EXISTS
								 (SELECT 1
							          FROM QINSEN.INST_JUANMO_DETAIL D, QINSEN.INST_CAIDIEMO C, QINSEN.INST_TUMO M
							         WHERE J.RECORD_ID = D.MAIN_BATCH_ID
							           AND D.CDM_BATCH_ID = C.RECORD_ID
							           AND C.TUMO_BATCH_ID = M.RECORD_ID
							           AND M.SPEC_ID = #mpSpecId#)</isNotNull>
        <isNotNull prepend="" property="juanmoDateBegin">AND J.PRODUCE_DT &gt;= TO_DATE(#juanmoDateBegin#, 'YYYY-MM-DD HH24:MI')</isNotNull>
        <isNotNull prepend="" property="juanmoDateEnd">AND J.PRODUCE_DT &lt; TO_DATE(#juanmoDateEnd#, 'YYYY-MM-DD HH24:MI')</isNotNull>
        <isEqual compareValue="Y" prepend="and" property="batchNOIsEmpty">A.BATCH_NO is null</isEqual>
        <isEqual compareValue="N" prepend="and" property="batchNOIsEmpty">A.BATCH_NO is not null</isEqual>
							
                          ORDER BY A.PRODUCE_DT DESC,
                                    A.CREATE_DT  DESC,
                                    A.BATCH_NO
                         
                         ) T) Z) T1

</select>
    <select id="queryRemainLength" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
	SELECT T1.RECORD_ID "recordId",
		   to_char(t1.produce_dt,'yyyy-MM-dd') "produceDt",
	       T1.BATCH_NO "batchNo",
	       T1.OUT_LENGTH,
	       T2.CAIMO_LENGTH,
	       T3.CAIMO_LOSS,
	       	       
	       NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0) "remainLength"
	  
	       <!--1.已裁完选择“是”
				2.膜片不良记录有裁叠膜录入不良记录-->
	  FROM (SELECT * from QINSEN.INST_TUMO tm
			WHERE tm.is_cut_over='Y'
			
			 <isNotNull prepend="" property="produceDtStart">and to_char(tm.produce_dt,'yyyy-MM-dd HH24:mi') &gt;= #produceDtStart#</isNotNull>
        <isNotNull prepend="" property="produceDtEnd">and to_char(tm.produce_dt,'yyyy-MM-dd HH24:mi') &lt;= #produceDtEnd#</isNotNull>
        <isEqual compareValue="1" prepend="" property="flag">
            <isNotNull prepend="" property="tmProduceDt">and to_char(tm.produce_dt,'yyyy-MM-dd') &gt;= to_char(to_date(#tmProduceDt#,'yyyy-MM-dd')-30,'yyyy-MM-dd')
			 and to_char(tm.produce_dt,'yyyy-MM-dd') &lt;= #tmProduceDt#</isNotNull>
            <isNull prepend="" property="tmProduceDt">and to_char(tm.produce_dt,'yyyy-MM-dd') &gt;= to_char(sysdate-30,'yyyy-MM-dd')</isNull>
        </isEqual>
        <isEqual compareValue="2" prepend="" property="flag">and to_char(tm.produce_dt,'yyyy-MM-dd') &gt;= '2025-04-01'</isEqual>
        <isEqual compareValue="3" prepend="" property="flag">and to_char(tm.produce_dt,'yyyy-MM-dd') &gt;= '2025-04-01'</isEqual>
			AND EXISTS (SELECT dd.tumo_batch_id from QINSEN.INST_CDM_DEFECT dd
			LEFT JOIN qinsen.para_cdm_defect pd ON dd.defect_item_id=pd.record_id
			WHERE pd.rec_tache_id=101 AND tm.record_id=dd.tumo_batch_id)) T1
	  LEFT JOIN (SELECT SUM(C.QUANTITY * C.BLANKING_SIZE * C.PAGE_WIDTH * decode(nvl(c.page_type,'长页'),'长页',1,0.5)) CAIMO_LENGTH,
	                    C.TUMO_BATCH_ID
	               FROM QINSEN.INST_CAIDIEMO C, QINSEN.PARA_MATER_SPEC CS
	              WHERE C.PROD_SPEC_ID = CS.MATER_SPEC_ID
	              GROUP BY C.TUMO_BATCH_ID) T2
	    ON T2.TUMO_BATCH_ID = T1.RECORD_ID
	  LEFT JOIN (SELECT SUM(D.LOSS) CAIMO_LOSS, D.TUMO_BATCH_ID
	               FROM QINSEN.INST_CDM_DEFECT D
	               WHERE NVL(d.if_tear,'是') = '是'
	              GROUP BY D.TUMO_BATCH_ID) T3
	    ON T3.TUMO_BATCH_ID = T1.RECORD_ID
	    where 1=1
	    
	    <isEqual compareValue="1" prepend="" property="flag">AND (
         (   
             NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) - NVL(T3.CAIMO_LOSS, 0) &lt;= -10
          ) 
          OR 
         (  NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) - NVL(T3.CAIMO_LOSS, 0) &gt;= 10 
         )
       )</isEqual>
        <isEqual compareValue="2" prepend="" property="flag">AND (
		 		NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) - NVL(T3.CAIMO_LOSS, 0)&gt;= 50
	       		 
	       		or
	       		 
	       	  	NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) - NVL(T3.CAIMO_LOSS, 0)&lt;= -50
	       		 
			)</isEqual>
        <isEqual compareValue="3" prepend="" property="flag">AND (
		 		NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) - NVL(T3.CAIMO_LOSS, 0)&gt;= 100
	       		 
	       		or
	       		 
	       	  	NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) - NVL(T3.CAIMO_LOSS, 0)&lt;= -100
	       		 
			)</isEqual>
        <isEqual compareValue="0" prepend="" property="flag">AND 1=2</isEqual>
        <isEqual compareValue="1" prepend="" property="condition">AND ((NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0))&gt;= 50
	       or 
	       (NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0))&lt;= -50
	       )</isEqual>
        <isEqual compareValue="2" prepend="" property="condition">AND (((NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0))&gt;= 3 
	      and 
	       (NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0))&lt;= 50)
	       or 
	       ((NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0))&gt;= -50
	       and 
	       (NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0))&lt;= -3))</isEqual>
		
		
	    order by produce_dt desc, NVL(T1.OUT_LENGTH, 0) - NVL(T2.CAIMO_LENGTH, 0) -
	       NVL(T3.CAIMO_LOSS, 0) desc
	    

</select>
    <!--一级 -50<x<=-10  or 0<x<50  '王正娥','蒋滔','李长林','李雅琪','周波','何选鹏','张博宁'-->
    <!--二级 x>=50 or x<=-50 '王金铁'，'唐学军','李卓','梁彪','罗啸'-->
    <!--三级 x>=100 or x<=-100 '焦朝凤','罗海鹰'-->
    <select id="queryRemainLengthLimit" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">select #userId# "userId",case when #userId# in('KS00420','KS00141','KS00388','KS00866','KS00867','XXB','KS00500','KS01295')
 		then '1'	 
	  	when #userId# in('KS00880','KS00017','KS01374','KS00524','KS00517')
 		then '2'
  		when #userId# in('LHY','KS00610')
 		then '3'
 		else '0'
 		end "flag"
 	from dual</select>
    <select id="queryRemainLengthUser" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">select v.operatorname "userName",v.userid "userId" from T_AC_OPERATORROLE t
	LEFT JOIN v_ac_operator_trs v
	ON t.operatorid=v.operatorid
	WHERE t.roleid=10001381</select>
</sqlMap>