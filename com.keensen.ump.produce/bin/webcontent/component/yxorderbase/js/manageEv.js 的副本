com.keensen.ump.produce.component.yxorderbaseMgr.prototype.initEvent = function() {
	var me = this;

	// 查询事件
	this.queryPanel.mon(this.queryPanel, 'query', function(form, vals) {
		var store = this.listPanel.store;
		store.baseParams = vals;
		store.load({
					params : {
						"pageCond/begin" : 0,
						"pageCond/length" : this.listPanel.pagingToolbar.pageSize
					}
				});
	}, this);

	this.optColumnWin.listPanel.store.on('load', function() {
				var columnStore = me.optColumnWin.listPanel.store;
				var columnModel = me.listPanel.getColumnModel();
				var records = columnStore.getRange();
				var showColumns = [];
				Ext.each(records, function(r) {
							var checked = r.data['checked'];
							var field = r.data['field'];
							if (checked == 'Y')
								showColumns.push(field);

						});
				Ext.each(records, function(r) {
							var field = r.data['field'];
							var idx = columnModel.findColumnIndex(field);
							if (idx != -1) {
								if (!showColumns.includes(field)) {
									columnModel.setHidden(idx, true);
								} else {
									columnModel.setHidden(idx, false);
								}
							}
						});
			})

	// 查询事件
	this.queryPanel3.mon(this.queryPanel3, 'query', function(form, vals) {
		var store = this.listPanel3.store;
		store.baseParams = vals;
		store.load({
					params : {
						"pageCond/begin" : 0,
						"pageCond/length" : this.listPanel3.pagingToolbar.pageSize
					}
				});
	}, this);

	// 增加修改事件
	this.listPanel.mon(this.listPanel, 'update', function(gird, cell) {
		var state = cell.data.state;
		var hpmc = cell.data.hpmc;
		var _this = this;
		if (this.opt == 'addorder') {
			if (state == '正式发布') {
				Ext.Msg.alert('系统提示', '已正式发布不能修改');
				return false;
			}

			if (hpmc != '其它' && hpmc != '其他') {
				if (state == '制定中' || state == '制定完待制造确认' || state == '不能接单') {
					this.addOrderWindow.show();
					this.addOrderWindow.loadData(cell);
				} else {
					Ext.Msg.alert('系统提示', '请选择状态为制定中或待制造确认或不能接单的记录');
					return false;
				}
			}
			if (hpmc == '其它' || hpmc == '其他') {
				this.updateRemarkWindow.show();
				this.updateRemarkWindow.loadData(cell);
			}

		}

		if (this.opt == 'confirm') {
			if (hpmc == '其它' || hpmc == '其他') {
				return;
			}

			if (state == '制定完待制造确认' || state == '不能接单') {
				this.confirmWindow.show();
				this.confirmWindow.loadData(cell);
			} else {
				Ext.Msg.alert('系统提示', '请选择状态为待制造确认或不能接单的记录');
				return false;
			}

		}

		if (this.opt == 'orderview') {
			this.orderViewWindow.show();
			this.orderViewWindow.loadData(cell);
		}

		if (this.opt == 'confirmlist') {
			if (hpmc == '其它' || hpmc == '其他') {
				return;
			}
			var relationId = cell.get('id');
			var store = this.confirmListPanel.store;
			store.load({
						params : {
							'map/relationId' : relationId
						}
					});
			this.confirmListWindow.show();

		}

		if (this.opt == 'adjust') {
			if (hpmc == '其它' || hpmc == '其他') {
				return;
			}

			if (state == '正式发布' || state == '调整申请') {
				var baseId = cell.get('id');
				_this.requestMask = this.requestMask
						|| new Ext.LoadMask(Ext.getBody(), {
									msg : "后台正在操作,请稍候!"
								});
				_this.requestMask.show();
				Ext.Ajax.request({
					url : "com.keensen.ump.produce.component.yxorderbase.queryPlanWeekByBaseId.biz.ext",
					method : "post",
					jsonData : {
						'condition/baseId' : baseId
					},
					success : function(resp) {
						var ret = Ext.decode(resp.responseText);
						var data = ret.data;
						if (!Ext.isEmpty(data)) {
							Ext.Msg.alert("系统提示", "已制定生产计划，不能变更！", function() {

									})
						} else {
							_this.adjustWindow.show();
							_this.adjustWindow.loadData(cell);
						}

					},
					callback : function() {
						_this.requestMask.hide()
					}
				})

			} else {
				Ext.Msg.alert('系统提示', '请选择状态为正式发布的记录');
				return false;
			}
		}

		if (this.opt == 'pconfirm') {

			if (hpmc == '其它' || hpmc == '其他') {
				return;
			}

			if (state == '计划员确认') {
				this.pconfirmWindow.show();
				this.pconfirmWindow.loadData(cell);
			} else {
				Ext.Msg.alert('系统提示', '请选择状态为计划员确认的记录');
				return false;
			}

		}

		if (this.opt == 'mconfirm') {

			if (hpmc == '其它' || hpmc == '其他') {
				return;
			}

			if (state == '制造中心确认') {
				this.mconfirmWindow.show();
				this.mconfirmWindow.loadData(cell);
			} else {
				Ext.Msg.alert('系统提示', '请选择状态为制造中心确认的记录');
				return false;
			}

		}

		if (this.opt == 'tconfirm') {
			if (hpmc == '其它' || hpmc == '其他') {
				return;
			}

			if (state == '工艺员确认') {
				this.tconfirmWindow.show();
				this.tconfirmWindow.loadData(cell);
			} else {
				Ext.Msg.alert('系统提示', '请选择状态为待工艺员确认的记录');
				return false;
			}

		}
	}, this);

	this.addOrderWindow.activeItem.mon(this.addOrderWindow.activeItem,
			'beforeSave', function() {
				var _this = this;
				var itemArr = [];
				var myCheckboxGroup = this.addOrderWindow.photoSingle;
				for (var i = 0; i < myCheckboxGroup.items.length; i++) {
					if (myCheckboxGroup.items.itemAt(i).checked) {
						itemArr.push(i);
					}
				}
				this.addOrderWindow.photoSingle2.setValue(itemArr.join(','));
				var itemArr = [];
				var myCheckboxGroup = this.addOrderWindow.photoAll;
				for (var i = 0; i < myCheckboxGroup.items.length; i++) {
					if (myCheckboxGroup.items.itemAt(i).checked) {
						itemArr.push(i);
					}
				}
				this.addOrderWindow.photoAll2.setValue(itemArr.join(','));
			}, this);

	this.adjustWindow.activeItem.mon(this.adjustWindow.activeItem, 'afterload',
			function(win, data) {

				var ifget = data.ifget;
				this.adjustWindow.pconfirm.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.pconfirm2.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.pconfirm3.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.pconfirm4.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.pconfirm5.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.ifall.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.ifsatisfy.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.ifdelivery.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.ifget.setVisible(!Ext.isEmpty(ifget));
				this.adjustWindow.reserve1.setVisible(!Ext.isEmpty(ifget));
				reserve1

			}, this);

	// 查询事件
	this.queryPanel4ChooseLable.mon(this.queryPanel4ChooseLable, 'query',
			function(form, vals) {
				var store = this.listPanel4ChooseLable.store;
				store.baseParams = vals;
				store.load({
					params : {
						"pageCond/begin" : 0,
						"pageCond/length" : this.listPanel4ChooseLable.pagingToolbar.pageSize
					}
				});
			}, this);

	// 查询事件
	this.queryPanel4ChooseMark.mon(this.queryPanel4ChooseMark, 'query',
			function(form, vals) {
				var store = this.listPanel4ChooseMark.store;
				store.baseParams = vals;
				store.load({
					params : {
						"pageCond/begin" : 0,
						"pageCond/length" : this.listPanel4ChooseMark.pagingToolbar.pageSize
					}
				});
			}, this);

}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.destroy = function() {

	this.excelUploadWin.destroy();
	this.confirmWindow.destroy();
	this.addOrderWindow.destroy();
	this.confirmListWindow.destroy();
	this.orderViewWindow.destroy();
	this.adjustWindow.destroy();
	this.pconfirmWindow.destroy();
	this.mconfirmWindow.destroy();
	this.orderMaterSpecWindow.destroy();
	this.addOrderMaterSpecWindow.destroy();
	this.updateRemarkWindow.destroy();
	this.chooseLableWindow.destroy();
	this.chooseMarkWindow.destroy();
}

// 模板文件下载
com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onDown = function() {

	Ext.Msg.show({
		width : 350,
		title : "操作提示",
		msg : "下载模板后，请按照示例填写真实订单数据，并注意日期和数字格式,示例数据请删除后再提交。",
		icon : Ext.Msg.WARNING,
		buttons : Ext.Msg.OK,
		fn : function(btn) {
			if (btn == "ok") {
				var fname = "ks_component_yxorderbase_import.xls";
				window.location.href = "com.zoomlion.hjsrm.pub.file.excelutil.modelDownload.flow?fileName="
						+ fname;
			}
		}

	})
};

// 弹出文件上传选择窗口
com.keensen.ump.produce.component.yxorderbaseMgr.prototype.importExcel = function() {
	this.uploadForm = this.excelUploadWin.getComponent('uploadForm').getForm();
	this.uploadForm.reset();
	this.excelUploadWin.show();

}

// 文件上传
com.keensen.ump.produce.component.yxorderbaseMgr.prototype.doUpload = function() {
	var _this = this;
	// var store = this.listPanel.store;
	this.uploadInputPanel = this.excelUploadWin.getComponent('uploadForm');
	// 校验
	this.fileUploadObj = this.uploadInputPanel.form.findField("uploadFile");
	// 文件名
	this.filePath = this.fileUploadObj.getValue();
	// 文件后缀
	this.sfileName = this.filePath.split(".");

	if (this.sfileName[1] == null || this.sfileName[1].toLowerCase() != "xls") {
		Ext.MessageBox.show({
					title : '操作提示',
					buttons : Ext.MessageBox.OK,
					msg : '文件必须为Excel xls文件',
					icon : Ext.MessageBox.ERROR
				});
		return false;
	}
	if (this.uploadInputPanel.form.isValid()) {
		var url = this.uploadInputPanel.saveUrl;
		this.uploadInputPanel.form.submit({
					method : "POST",
					timeout : 1200,
					url : url,
					waitTitle : "操作提示",
					waitMsg : "上传数据中...",
					success : function(form, action) {
						var result = action.result;
						if (result.success) {
							_this.excelUploadWin.hide();
							Ext.Msg.alert("操作提示", result.msg == "1"
											? "批量上传成功"
											: result.msg, function() {
										_this.listPanel.store.reload();
									}, this);
						}
					},
					failure : function(form, action) {
						Ext.MessageBox.show({
									title : '操作提示',
									buttons : Ext.MessageBox.OK,
									msg : "导入失败，请检查文件格式或网络是否正常",
									icon : Ext.MessageBox.ERROR
								});
					}
				});
	}

}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onAddOrder = function() {
	if (this.onSingleSelect()) {
		this.opt = 'addorder';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onCalc = function() {
	var dryAmount = this.addOrderWindow.dryAmount.getValue();
	var wetAmount = this.addOrderWindow.wetAmount.getValue();
	var stockAmount = parseInt(dryAmount) + parseInt(wetAmount);
	var orderAmount = this.addOrderWindow.orderAmount.getValue();
	var prodAmount = orderAmount - stockAmount;
	this.addOrderWindow.stockAmount.setValue(stockAmount);
	this.addOrderWindow.prodAmount.setValue(prodAmount);
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onCalcPeriod = function() {
	// 入库日期-下单日期
	var demandStockDate = this.addOrderWindow.demandStockDate.getValue();
	var orderDate = this.addOrderWindow.orderDate.getValue();
	this.addOrderWindow.period.setValue(getDayDiff(orderDate, demandStockDate));
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onAddSave = function() {
	var snRegular = this.addOrderWindow.snRegular.getValue();
	var snStart = this.addOrderWindow.snStart.getValue();
	var snEnd = this.addOrderWindow.snEnd.getValue();
	if (!Ext.isEmpty(snRegular) && snRegular == '是'
			&& (Ext.isEmpty(snStart) || Ext.isEmpty(snEnd))) {
		Ext.Msg.alert('系统提示', '请输入标签序号');
		return false;
	}

	var markRegular = this.addOrderWindow.markRegular.getValue();
	var markStart = this.addOrderWindow.markStart.getValue();
	var markEnd = this.addOrderWindow.markEnd.getValue();
	if (!Ext.isEmpty(markRegular) && markRegular == '是'
			&& (Ext.isEmpty(markStart) || Ext.isEmpty(markEnd))) {
		Ext.Msg.alert('系统提示', '请输入唛头序号');
		return false;
	}

	/*
	 * var label = this.addOrderWindow.label.getValue(); var logoLabel =
	 * this.addOrderWindow.logoLabel.getValue(); var specNameLabel =
	 * this.addOrderWindow.specNameLabel.getValue(); if (!Ext.isEmpty(label) &&
	 * label.trim() == '公司标准' && (Ext.isEmpty(logoLabel) ||
	 * Ext.isEmpty(specNameLabel))) { Ext.Msg.alert('系统提示', '请完整输入标签信息'); return
	 * false; }
	 * 
	 * var mark = this.addOrderWindow.mark.getValue(); var logoMark =
	 * this.addOrderWindow.logoMark.getValue(); var specNameMark =
	 * this.addOrderWindow.specNameMark.getValue(); if (!Ext.isEmpty(mark) &&
	 * mark.trim() == '公司标准' && (Ext.isEmpty(logoMark) ||
	 * Ext.isEmpty(specNameMark))) { Ext.Msg.alert('系统提示', '请完整输入唛头信息'); return
	 * false; }
	 */

	var labelDouble = this.addOrderWindow.labelDouble.getValue();
	if (labelDouble == '是') {
		var labelDrawingCode2 = this.addOrderWindow.labelDrawingCode2
				.getValue();
		var logoLabel2 = this.addOrderWindow.logoLabel2.getValue();
		var specNameLabel2 = this.addOrderWindow.specNameLabel2.getValue();
		if (Ext.isEmpty(labelDrawingCode2)
				&& (Ext.isEmpty(logoLabel2) || Ext.isEmpty(specNameLabel2))) {
			Ext.Msg.alert('系统提示', '请完整输入第二标签信息');
			return false;
		}
	}

	var markDouble = this.addOrderWindow.markDouble.getValue();
	if (markDouble == '是') {
		var markDrawingCode2 = this.addOrderWindow.markDrawingCode2.getValue();
		var logoMark2 = this.addOrderWindow.logoMark2.getValue();
		var specNameMark2 = this.addOrderWindow.specNameMark2.getValue();
		if (Ext.isEmpty(markDrawingCode2)
				&& (Ext.isEmpty(logoMark2) || Ext.isEmpty(specNameMark2))) {
			Ext.Msg.alert('系统提示', '请完整输入第二唛头信息');
			return false;
		}
	}

	this.addOrderWindow.saveData();
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onConfirm = function() {

	if (this.onSingleSelect()) {
		this.opt = 'confirm';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onOrderView = function() {

	if (this.onSingleSelect()) {
		this.opt = 'orderview';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}

}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onConfirmSave = function() {
	var reason = this.confirmWindow.reason.getValue();
	var ifget = this.confirmWindow.ifget.getValue();
	if (!Ext.isEmpty(ifget) && ifget == '否' && Ext.isEmpty(reason)) {
		Ext.Msg.alert('系统提示', '不能接单时请填写反馈内容');
		return false;
	}

	if (!Ext.isEmpty(ifget) && ifget == '需工艺确认' && Ext.isEmpty(reason)) {
		Ext.Msg.alert('系统提示', '需工艺确认时请填写反馈内容');
		return false;
	}
	this.confirmWindow.saveData();
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onConfirmList = function() {

	if (this.onSingleSelect()) {
		this.opt = 'confirmlist';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onConfirmList2 = function() {
	if (this.onSingleSelect()) {
		this.opt = 'confirmlist';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onAdjust = function() {

	if (this.onSingleSelect()) {
		this.opt = 'adjust';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onPConfirm = function() {

	if (this.onSingleSelect()) {
		this.opt = 'pconfirm';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onMConfirm = function() {

	if (this.onSingleSelect()) {
		this.opt = 'mconfirm';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}
com.keensen.ump.produce.component.yxorderbaseMgr.prototype.exportExcel = function() {
	var _this = this;

	var daochu = _this.queryPanel.getForm().getValues();

	this.requestMask = this.requestMask || new Ext.LoadMask(Ext.getBody(), {
				msg : "后台正在操作,请稍候!"
			});
	this.requestMask.show();
	Ext.Ajax.request({
		url : "com.zoomlion.hjsrm.pub.file.excelutil.exportExcelMgr.exportExcelByNamingSqlLimited.biz.ext",
		method : "post",
		jsonData : {
			'map' : daochu,
			'map/limited' : '10000',
			namingsql : 'com.keensen.ump.produce.component.yxorderbase.queryYxOrderBase',
			templateFilename : 'ks_component_yxorderbase_export'
		},
		success : function(resp) {
			var ret = Ext.decode(resp.responseText);
			if (ret.success) {

				var fname = ret.fname;
				if (Ext.isIE) {
					window.open('/default/deliverynote/seek/down4IE.jsp?fname='
							+ fname);
				} else {
					window.location.href = "com.zoomlion.hjsrm.kcgl.download.flow?fileName="
							+ fname;
				}

			}

		},
		callback : function() {
			_this.requestMask.hide()
		}
	})
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onOrderMaterSpec = function() {
	this.orderMaterSpecWindow.show();
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onAddSpec = function() {
	this.addOrderMaterSpecWindow.show();
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onDelSpec = function() {
	this.listPanel3.onDel();
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onTConfirm = function() {

	if (this.onSingleSelect()) {
		this.opt = 'tconfirm';
		this.listPanel.onEdit();
	} else {
		Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
		return false;
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onChange = function() {
	var A = this.listPanel;
	var _this = this;
	if (!A.getSelectionModel().getSelected()) {
		Ext.Msg.alert("系统提示", "没有选定数据，请选择数据行！");
		return;
	} else {
		var records = A.getSelectionModel().getSelections();
		
		var ids = []
		Ext.each(records, function(r) {
							var id = r.data.id;
							ids.push(id);
						})
		
		//var id = records[0].get('id');
		//var deliveryState = records[0].get('deliveryState') == '是' ? '否' : '是';
		this.requestMask = this.requestMask
				|| new Ext.LoadMask(Ext.getBody(), {
							msg : "后台正在操作,请稍候!"
						});
		this.requestMask.show();
		Ext.Ajax.request({
			//url : "com.keensen.ump.produce.component.yxorderbase.saveDeliveryState.biz.ext",
		    url : "com.keensen.ump.produce.component.yxorderbase.saveDeliveryStateBatch.biz.ext",
			method : "post",
			jsonData : {
				ids : ids.join(',')
				//'entity/id' : id,
				//'entity/deliveryState' : deliveryState
			},
			success : function(resp) {
				var ret = Ext.decode(resp.responseText);
				if (ret.success) {
					if (ret.success) {
						_this.listPanel.store.reload();
					}
				}

			},
			callback : function() {
				_this.requestMask.hide()
			}
		})
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onDel = function() {
	var A = this.listPanel;
	var _this = this;
	if (!A.getSelectionModel().getSelected()) {
		Ext.Msg.alert("系统提示", "没有选定数据，请选择数据行！");
		return;
	} else {
		if (!this.onSingleSelect()) {
			Ext.Msg.alert("系统提示", "仅允许选择一条数据行!");
			return false;
		}
		var records = A.getSelectionModel().getSelections();
		var state = records[0].get('state');
		var id = records[0].get('id');
		if (state != '制定中') {
			Ext.Msg.alert('系统提示', '请选择状态为制定中的记录');
			return false;
		}
		Ext.Msg.confirm("操作确认", "您确实要删除这条记录吗?", function(A) {
			if (A == "yes") {
				this.requestMask = this.requestMask
						|| new Ext.LoadMask(Ext.getBody(), {
									msg : "后台正在操作,请稍候!"
								});
				this.requestMask.show();
				Ext.Ajax.request({
					url : "com.keensen.ump.produce.component.yxorderbase.deleteYxOrderBase.biz.ext",
					method : "post",
					jsonData : {
						'id' : id
					},
					success : function(resp) {
						var ret = Ext.decode(resp.responseText);
						if (ret.success) {
							if (ret.success) {
								_this.listPanel.store.reload();
							}
						}

					},
					callback : function() {
						_this.requestMask.hide()
					}
				})
			}
		})
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onChoose4Label = function(
		opt) {
	this.chooseLableWindow.opt = opt;
	this.queryPanel4ChooseLable.form.reset();
	var store = this.listPanel4ChooseLable.store;
	store.baseParams = {};
	store.load({
		params : {
			"pageCond/begin" : 0,
			"pageCond/length" : this.listPanel4ChooseLable.pagingToolbar.pageSize
		}
	});
	this.chooseLableWindow.show();

}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onSelect4ChooseLable = function() {
	var A = this.listPanel4ChooseLable;
	if (!A.getSelectionModel().getSelected()) {
		Ext.Msg.alert("系统提示", "没有选定数据，请选择数据行！")
	} else {
		var records = A.getSelectionModel().getSelections();
		var logo = records[0].data.logo;
		var specName = records[0].data.specName;
		var drawingCode = records[0].data.drawingCode;
		var opt = this.chooseLableWindow.opt
		if (opt == '1') {
			this.addOrderWindow.logoLabel.setValue(logo);
			this.addOrderWindow.specNameLabel.setValue(specName);
			this.addOrderWindow.labelDrawingCode.setValue(drawingCode);
		}
		if (opt == '2') {
			this.addOrderWindow.logoLabel2.setValue(logo);
			this.addOrderWindow.specNameLabel2.setValue(specName);
			this.addOrderWindow.labelDrawingCode2.setValue(drawingCode);
		}
		this.chooseLableWindow.hide();
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onChoose4Mark = function(
		opt) {
	this.chooseMarkWindow.opt = opt;
	this.queryPanel4ChooseMark.form.reset();
	
	var materSpecName2 = this.addOrderWindow.materSpecName2.getValue();	
	var store = this.listPanel4ChooseMark.store;
	store.baseParams = {'condition/specName2':materSpecName2};
	store.load({
		params : {
			"pageCond/begin" : 0,
			"pageCond/length" : this.listPanel4ChooseMark.pagingToolbar.pageSize
		}
	});
	this.chooseMarkWindow.show();
	this.queryPanel4ChooseMark.specNameLabel.setValue(materSpecName2);
	
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onSelect4ChooseMark = function() {
	var A = this.listPanel4ChooseMark;
	if (!A.getSelectionModel().getSelected()) {
		Ext.Msg.alert("系统提示", "没有选定数据，请选择数据行！")
	} else {
		var records = A.getSelectionModel().getSelections();
		var logo = records[0].data.logo;
		var specName = records[0].data.specName;
		var drawingCode = records[0].data.drawingCode;
		var opt = this.chooseMarkWindow.opt
		if (opt == '1') {
			this.addOrderWindow.logoMark.setValue(logo);
			this.addOrderWindow.specNameMark.setValue(specName);
			this.addOrderWindow.markDrawingCode.setValue(drawingCode);
		}
		if (opt == '2') {
			this.addOrderWindow.logoMark2.setValue(logo);
			this.addOrderWindow.specNameMark2.setValue(specName);
			this.addOrderWindow.markDrawingCode2.setValue(drawingCode);
		}
		this.chooseMarkWindow.hide();
	}
}

com.keensen.ump.produce.component.yxorderbaseMgr.prototype.onSingleSelect = function() {
	var C = this.listPanel.getSelectionModel().getSelections();
	if (C.length > 1) {
		return false;
	} else {
		return true;
	}
}
// 日期相差天数
function getDayDiff(start, end) {
	var datediff = (new Date(end)) - (new Date(start));
	datediff = datediff / 24 / 60 / 60 / 1000;
	return Math.round(datediff);;
}