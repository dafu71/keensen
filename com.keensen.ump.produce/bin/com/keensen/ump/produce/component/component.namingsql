<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="com.keensen.ump.produce.component.component">
    <select id="queryOrder" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
    SELECT T1.ID                 AS "id",

       to_char(t1.create_time,'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID     AS "createUserId",
       T1.CREATE_NAME        AS "createName",
    
       to_char(T1.UPDATE_TIME,'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID     AS "updateUserId",
       T1.UPDATE_NAME        AS "updateName",
       T1.RESERVE1           AS "reserve1",
       T1.RESERVE2           AS "reserve2",
       T1.RESERVE3           AS "reserve3",
       T1.RESERVE4           AS "reserve4",
       T1.RESERVE5           AS "reserve5",
       T1.ORG_ID             AS "orgId",
       T1.STATUS             AS "status",
       T1.ORDER_TYPE         AS "orderType",
       T1.TYPE               AS "type",
       T1.ORDER_NO           AS "orderNo",
       T1.ORDER_DATE         AS "orderDate",
       T1.MATER_SPEC_NAME    AS "materSpecName",
       T1.DRY_WET            AS "dryWet",
       T1.ORDER_AMOUNT       AS "orderAmount",
       T1.PROD_AMOUNT        AS "prodAmount",
       T1.LABEL              AS "label",
       T1.BAG                AS "bag",
       T1.BOX                AS "box",
       T1.MARK               AS "mark",
       T1.PACK               AS "pack",
       T1.PERFORMANCE        AS "performance",
       T1.REMARK             AS "remark",
       T1.DEMAND_STOCK_DATE  AS "demandStockDate",
       T1.CONFIRM            AS "confirm",
       T1.CONFIRMEDBY        AS "confirmedby",
       T1.CONFIRMEDBY_USERID AS "confirmedbyUserid"
  FROM KS_PROD_COMPONENT_ORDER T1
    where 1=1
    <isNotNull prepend="and" property="createTimeStart">to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#</isNotNull>
        <isNotNull prepend="and" property="createTimeEnd">to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#</isNotNull>
        <isNotNull prepend="and" property="orderDateStart">to_char(t1.order_Date,'yyyy-MM-dd')  &gt;=  #orderDateStart#</isNotNull>
        <isNotNull prepend="and" property="orderDateEnd">to_char(t1.order_Date,'yyyy-MM-dd')  &lt;=  #orderDateEnd#</isNotNull>
        <isNotNull prepend="and" property="orderNo2">upper(t1.order_No) like '%' || upper(#orderNo2#) || '%'</isNotNull>
        <isNotNull prepend="and" property="orderNo">upper(t1.order_No) = #orderNo#</isNotNull>
        <isNotNull prepend="and" property="materSpecName">upper(t1.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'</isNotNull>
    </select>
    <select id="queryPlan" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
    SELECT T1.ID AS "id",T1.state "state",
    TO_CHAR(T1.finish_dt, 'yyyy-MM-dd') "finishDt",
    t1.finish_name "finishName",t1.finish_user_id "finishUserId",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",
       T1.RESERVE1 AS "reserve1",
       T1.RESERVE2 AS "reserve2",
       T1.RESERVE3 AS "reserve3",
       T1.RESERVE4 AS "reserve4",
       T1.RESERVE5 AS "reserve5",
       T1.ORG_ID AS "orgId",
       T1.STATUS AS "status",
       T1.PLAN_NO AS "planNo",
       T1.TEAMID AS "teamid",
       d.orgname AS "team",
       T1.PRODUCT_DT AS "productDt",
       T1.BATCH_NO AS "batchNo",
       T1.AMOUNT AS "amount",
       T1.STORAGE_ID AS "storageId",
       T1.POSITION AS "position",
       T1.PRODUCT_DEMAND AS "productDemand",
       T1.PRODUCT_ORDER AS "productOrder",
       T1.REMARK AS "remark",
       T2.NAME AS "storageName",
       t3.ORDER_NO as "orderNo",
        T3.ORDER_DATE         AS "orderDate",
       T3.MATER_SPEC_NAME    AS "materSpecName",
       T3.ORDER_AMOUNT       AS "orderAmount",
		t1.ORDER_ID as "orderId"
       
  FROM KS_PROD_COMPONENT_PLAN T1
  left join v_dept d on d.orgid = t1.teamid
  LEFT JOIN KS_BASE_STORAGE T2
    ON T1.STORAGE_ID = T2.ID
  left join KS_PROD_COMPONENT_ORDER T3
  on t3.id = t1.ORDER_ID
    where 1=1
    
    <isNotNull prepend="and" property="trace">((T1.PRODUCT_ORDER = 1 AND NVL(T1.STATE, 'a') != '完成') 
      OR 
   (T1.PRODUCT_ORDER != 1 AND NVL(T1.STATE, 'a') = '待完成'))</isNotNull>
        <isNotNull prepend="and" property="batchNo2">upper(T1.BATCH_NO) like '%' || upper(#batchNo2#) || '%'</isNotNull>
        <isNotNull prepend="and" property="planNo">upper(t1.plan_No) = #planNo#</isNotNull>
        <isNotNull prepend="and" property="planNo2">upper(t1.plan_No) like '%' || upper(#planNo2#) || '%'</isNotNull>
        <isNotNull prepend="and" property="orderNo2">upper(t3.order_No) like '%' || upper(#orderNo2#) || '%'</isNotNull>
        <isNotNull prepend="and" property="id">t1.id = #id#</isNotNull>
        <isNotNull prepend="and" property="state">t1.state in ($state$)</isNotNull>
        <isNotNull prepend="and" property="teamid">t1.teamid = #teamid#</isNotNull>
        <isNotNull prepend="and" property="orderId">t1.order_Id = #orderId#</isNotNull>
        <isNotNull prepend="and" property="orderNo">upper(t3.order_No) = upper(#orderNo#)</isNotNull>
        <isNotNull prepend="and" property="createTimeStart">to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#</isNotNull>
        <isNotNull prepend="and" property="createTimeEnd">to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#</isNotNull>
        <isNotNull prepend="and" property="productDtStart">to_char(t1.PRODUCT_DT,'yyyy-MM-dd')  &gt;=  #productDtStart#</isNotNull>
        <isNotNull prepend="and" property="productDtEnd">to_char(t1.PRODUCT_DT,'yyyy-MM-dd')  &lt;=  #productDtEnd#</isNotNull>
     order by t1.ORDER_ID,T1.PLAN_NO,T1.PRODUCT_ORDER
    </select>
    <select id="queryPlanNo" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">SELECT planno "planNo" from 
	(SELECT to_char(SYSDATE,'yyyyMMdd')|| '001' planNo FROM dual
	WHERE NOT EXISTS(
	select t.plan_no "planNo" from KS_PROD_COMPONENT_PLAN t
	WHERE SUBSTR(t.plan_no,1,8) = to_char(SYSDATE,'yyyyMMdd'))
	UNION
	select to_char(to_number(max(t.plan_no))+1) planNo from KS_PROD_COMPONENT_PLAN t
	WHERE SUBSTR(t.plan_no,1,8) = to_char(SYSDATE,'yyyyMMdd'))
	WHERE planno IS NOT NULL</select>
    <update id="updatePlan" parameterClass="java.util.HashMap">update KS_PROD_COMPONENT_PLAN tt
   	set tt.state = '待完成'
   	where tt.product_order =
    (select MIN(t.product_order) "productOrder" from KS_PROD_COMPONENT_PLAN t
	WHERE t.order_id = (
	select DISTINCT order_id from KS_PROD_COMPONENT_PLAN WHERE id=#id#
	)
	AND NVL(t.state,'待完成')='待完成')
	and tt.order_id = (
	select DISTINCT order_id from KS_PROD_COMPONENT_PLAN WHERE id=#id#
	)</update>
    <update id="updatePlanStorageId" parameterClass="java.util.HashMap">UPDATE  KS_PROD_COMPONENT_STOCK
	SET
	  KS_PROD_COMPONENT_STOCK.storage_id  =  (SELECT  id  FROM  KS_BASE_STORAGE  WHERE   KS_BASE_STORAGE.name = KS_PROD_COMPONENT_STOCK.storage_name)
	WHERE
	  EXISTS ( SELECT 1 FROM   KS_BASE_STORAGE  WHERE   KS_BASE_STORAGE.name = KS_PROD_COMPONENT_STOCK.storage_name)</update>
    <select id="queryPlanStock" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
   	
	SELECT t.batch_no "batchNo",t.storage_id "storageId",T2.NAME AS "storageName",
	t.position "position",t.amount "amount" from KS_PROD_COMPONENT_STOCK t
	LEFT JOIN KS_BASE_STORAGE T2
    ON T.STORAGE_ID = T2.ID
	where 1=1
	<isNotNull prepend="and" property="batchNoStr">t.batch_no in($batchNoStr$)</isNotNull>
        <isNotNull prepend="and" property="batchNo">T.BATCH_NO = #batchNo#</isNotNull>
    </select>
    <select id="queryPlanDetail" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
   	
	SELECT t.batch_no "batchNo",t.storage_id "storageId",T2.NAME AS "storageName",t.reserve1 "reserve1",t.id "id",
	t.position "position",t.amount "amount" from KS_PROD_COMPONENT_PLAN_DETAIL t
	LEFT JOIN KS_BASE_STORAGE T2
    ON T.STORAGE_ID = T2.ID
	where 1=1
	<isNotNull prepend="and" property="batchNoStr">t.batch_no in($batchNoStr$)</isNotNull>
        <isNotNull prepend="and" property="relationId">t.relation_id = #relationId#</isNotNull>
    </select>
    <delete id="deletePlanDetail" parameterClass="java.util.HashMap">delete from  KS_PROD_COMPONENT_PLAN_DETAIL
	WHERE
	  relation_id = #relationId#</delete>
    <select id="queryTemporaryArea" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
   	
	SELECT T1.CREATE_TIME    AS "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME    AS "createName",
       T1.UPDATE_TIME    AS "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME    AS "updateName",
       T1.RESERVE1       AS "reserve1",
       T1.RESERVE2       AS "reserve2",
       T1.RESERVE3       AS "reserve3",
       T1.RESERVE4       AS "reserve4",
       T1.RESERVE5       AS "reserve5",
       T1.ORG_ID         AS "orgId",
       T1.STATUS         AS "status",
       T1.STORAGE_NAME   AS "storageName",
       T1.POSITION       AS "position",
       T1.AMOUNT         AS "amount",
       T1.STORAGE_ID     AS "storageId",
       T1.BATCH_NO       AS "batchNo"
  FROM KS_PROD_COMPONENT_TEMPAREA T1

	where 1=1
	<isNotNull prepend="and" property="batchNoStr">t1.batch_no in($batchNoStr$)</isNotNull>
        <isNotNull prepend="and" property="batchNo">T1.BATCH_NO = #batchNo#</isNotNull>
        <isNotNull prepend="and" property="storageId">T1.STORAGE_ID = #storageId#</isNotNull>
        <isNotNull prepend="and" property="batchNo2">upper(T1.BATCH_NO) like '%' || upper(#batchNo2#) || '%'</isNotNull>
        <isNotNull prepend="and" property="storageName">T1.STORAGE_NAME like '%' || #storageName# || '%'</isNotNull>
        <isNotNull prepend="and" property="position">T1.POSITION like '%' || #position# || '%'</isNotNull>
    </select>
    <select id="queryHuanku" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
   	
	SELECT T.BATCH_NO "batchNo",
       T.AMOUNT "amount",
       T2.LOSS "loss",
       T2.CAIMO_LENGTH "caimoLength",
       T.AMOUNT - (nvl(T2.LOSS,0) + nvl(T2.CAIMO_LENGTH,0)) "amount2"
  FROM KS_PROD_COMPONENT_STOCK T
  LEFT JOIN (SELECT TT.BATCH_NO, TT.LOSS, TT.CAIMO_LENGTH
               FROM V_KS_TUMO_ALL TT) T2
    ON T.BATCH_NO = T2.BATCH_NO
	where 1=1
	and not exists(
		select 1 from KS_PROD_COMPONENT_TEMPAREA where BATCH_NO = #batchNo#
	)
	<isNotNull prepend="and" property="batchNo">T.BATCH_NO = #batchNo#</isNotNull>
    </select>
</sqlMap>