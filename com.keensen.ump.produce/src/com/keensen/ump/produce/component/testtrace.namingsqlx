<?xml version="1.0" encoding="UTF-8"?>
<!-- author:dafu -->
<sqlMap>
  
    <select id="queryTestTrace" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    SELECT T1.BATCH_NO "batchNo",T1.id "id",
       T1.CATEGORY "category",
       T1.test_Type "testType", T1.test_length "testLength", T1.test_amount "testAmount",
       T1.test_condition "testCondition",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd HH24:mi:ss') "createTime",
       T1.CREATE_NAME "createName",
       T1.FROM_IP "fromIp",
       T1.RECORD_ID "recordId",
       T1.RESERVE1  "prodSpecName",
       T1.RESERVE2  "confirmUser",
       pms.mater_spec_id "prodSpecId"
    FROM KS_COMPONENT_TEST_TRACE T1
    LEFT JOIN qinsen.para_mater_spec pms ON pms.mater_spec_name=T1.RESERVE1
  	where 1=1
  	<isNotNull prepend="and" property="batchNo"> 
		       T1.BATCH_NO = #batchNo#
	</isNotNull>
	<isNotNull prepend="and" property="category"> 
		       T1.category = #category#
	</isNotNull>
	<isNotNull prepend="and" property="testType"> 
		       T1.test_Type = #testType#
	</isNotNull>
	<isNotNull prepend="and" property="testCondition"> 
		       T1.test_condition = #testCondition#
	</isNotNull>
	
	<isNotNull prepend="and" property="batchNo2"> 
		       T1.BATCH_NO like '%' || #batchNo2# || '%'
	</isNotNull>
	
  	order by t1.id desc
    </select>
    
     <select id="queryTestTrace2" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    SELECT T1.BATCH_NO "batchNo",T1.id "id",
       T1.CATEGORY "category",
       T1.test_Type "testType",
       T1.test_condition "testCondition",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd HH24:mi:ss') "createTime",
       T1.CREATE_NAME "createName",
       T1.FROM_IP "fromIp",
       T1.RECORD_ID "recordId",
       T1.RESERVE1  "prodSpecName",
       T1.RESERVE2  "confirmUser",
       T2.prod_spec_name "prodSpecName2"
  	FROM (select * from KS_COMPONENT_TEST_TRACE where category = '卷膜') T1
  	LEFT JOIN (select t.batch_no jm_batch_no,t.prod_spec_id,pms.mater_spec_name prod_spec_name 
  	from qinsen.inst_juanmo_main t
		LEFT JOIN qinsen.para_mater_spec pms ON pms.mater_spec_id=t.prod_spec_id) T2
	on T1.BATCH_NO = t2.jm_batch_no
  	
  	<isNotNull prepend="and" property="batchNo"> 
		       T1.BATCH_NO = #batchNo#
	</isNotNull>
	<isNotNull prepend="and" property="category"> 
		       T1.category = #category#
	</isNotNull>
	<isNotNull prepend="and" property="testType"> 
		       T1.test_Type = #testType#
	</isNotNull>
	<isNotNull prepend="and" property="testCondition"> 
		       T1.test_condition = #testCondition#
	</isNotNull>
  	order by t1.id desc
    </select>
    
    <select id="query4Scan" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    SELECT t.batch_no "batchNo",'涂膜' "category",T.RECORD_ID "recordId" from qinsen.inst_tumo t
	WHERE t.batch_no=#batchNo#
	UNION
	SELECT t.batch_no,'卷膜',T.RECORD_ID  from qinsen.inst_juanmo_main t
	WHERE t.batch_no=#batchNo#
	</select>
	
	<select id="queryTrace" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
       SELECT T1.BATCH_NO           AS "batchNo",
       T1.LINE_CODE          AS "lineCode",
       T1.MATER_CLASS_CODE   AS "materClassCode",
       T1.MATER_SPEC_NAME    AS "materSpecName",
       T1.OUT_LENGTH         AS "outLength",
       T1.QUALIFID_LENGTH    AS "qualifidLength",
       T1.PRODUCE_DT         AS "produceDt",
       T1.TO_CDM_DT          AS "toCdmDt",
       T1.CDM_PRODUCE_DT     AS "cdmProduceDt",
       T1.CDM_PROD_SPEC_NAME AS "cdmProdSpecName",
       T1.CDM_AMOUNT         AS "cdmAmount",
       T1.JM_PRODUCE_DT      AS "jmProduceDt",
       T1.JM_PROD_SPEC_NAME  AS "jmProdSpecName",
       T1.JM_BATCH_NO        AS "jmBatchNo",
       T1.QJ_PRODUCE_DT      AS "qjProduceDt",
       T1.TO_WATER_DT        AS "toWaterDt",
       T1.F_CHECK_TM         AS "fCheckTm",
       T1.R_CHECK_TM         AS "rCheckTm",
       T1.CHECK_RESULT       AS "qjResult",
       T1.F_GPD              AS "fGpd",
       T1.F_SALT             AS "fSalt",
       T1.R_GPD              AS "rGpd",
       T1.R_SALT             AS "rSalt",
       T1.A_GPD_LOW_LIMIT    AS "aGpdLowLimit",
       T1.A_GPD_UP_LIMIT     AS "aGpdUpLimit",
       T1.A_SALT_LOW_LIMIT   AS "aSaltLowLimit",
       T1.JUDGE              AS "judge",
       T1.test_type          AS "testType",
       T1.test_condition          AS "testCondition",
       T1.tm_to_cdm_diff     AS "tmToCdmDiff",
       T1.tm_cdm_diff     AS "tmCdmDiff",
       T1.cdm_jm_diff     AS "cdmJmDiff",
       t1.jm_dt_add_4        AS "jmDtAdd4",
       t1.jm_dt_23        AS "jmDt23",
       t1.qj_dt_23        AS "qjDt23",
       t1.plan_date      as "planDate",
       t1.to_cdm_cdm_diff  as "toCdmCdmDiff",
       t1.to_water_fcheck_diff as "toWaterFcheckDiff",
       t1.fcheck_rcheck_diff as "fcheckRcheckDiff",
       t1.is_prod_qualified as "isProdQualified",
       t1.TO_CDM_NAME AS "toCdmName",
       t1.cdm_name AS "cdmName",
       t1.jm_name AS "jmName",
       t1.qj_name AS "qjName",
       t1.TO_WATER_NAME AS "toWaterName",
       t1.f_checker_name AS "fCheckerName",
       t1.r_checker_name AS "rCheckerName",
       t1.cdm_produce_dt_before "cdmProduceDtBefore",
       t1.jm_produce_dt_before "jmProduceDtBefore",
       t1.jm_produce_dt_after "jmProduceDtAfter",
       t1.to_water_dt_after "toWaterDtAfter",
       nvl(t1.cdm_produce_dt_before_rest,0) "cdmProduceDtBeforeRest",
        nvl(t1.jm_produce_dt_before_rest,0) "jmProduceDtBeforeRest",
        nvl(t1.jm_produce_dt_after_rest,0) "jmProduceDtAfterRest",
        nvl(T1.to_water_dt_after_rest,0) "toWaterDtAfterRest"
  FROM (
        
        SELECT T.BATCH_NO,
                T.LINE_CODE,
                T.MATER_CLASS_CODE,
                T.MATER_SPEC_NAME,
                T.OUT_LENGTH,
                T.QUALIFID_LENGTH,
                TO_CHAR(T.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss') PRODUCE_DT,
                TO_CHAR(T3.TO_CDM_DT, 'yyyy-MM-dd HH24:mi:ss') TO_CDM_DT,
                TO_CHAR(CDM.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss') CDM_PRODUCE_DT,
                CDMP.MATER_SPEC_NAME CDM_PROD_SPEC_NAME,
                T2.CNT CDM_AMOUNT,
                TO_CHAR(JM.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss') JM_PRODUCE_DT,
                JMP.MATER_SPEC_NAME JM_PROD_SPEC_NAME,
                JM.BATCH_NO JM_BATCH_NO,
                TO_CHAR(QJ.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss') QJ_PRODUCE_DT,
                TO_CHAR(T4.TO_WATER_DT, 'yyyy-MM-dd HH24:mi:ss') TO_WATER_DT,
                TO_CHAR(WT.F_CHECK_TM, 'yyyy-MM-dd HH24:mi:ss') F_CHECK_TM,
                TO_CHAR(WT.R_CHECK_TM, 'yyyy-MM-dd HH24:mi:ss') R_CHECK_TM,
                JMD.MAIN_BATCH_ID JM_BATCH_ID,
                CDM.BATCH_NO CDM_BATCH_NO,
                QJ.CHECK_RESULT,
                WT.F_GPD,
                WT.F_SALT,
                WT.R_GPD,wt.is_prod_qualified,
                WT.R_SALT,
                T.SPEC_ID,
                JM.PROD_SPEC_ID,
                WSTD.A_GPD_LOW_LIMIT,
                WSTD.A_GPD_UP_LIMIT,
                WSTD.A_SALT_LOW_LIMIT,
                CASE
                  WHEN (NVL(WT.R_GPD, WT.F_GPD) >= WSTD.A_GPD_LOW_LIMIT) AND
                       (NVL(WT.R_GPD, WT.F_GPD) &lt;= WSTD.A_GPD_UP_LIMIT) AND
                       (NVL(WT.R_SALT, WT.F_SALT) >= WSTD.A_SALT_LOW_LIMIT) THEN
                   '合格'
                  ELSE
                   '不合格'
                END JUDGE,
                T3.test_type,T4.TEST_CONDITION,T3.TO_CDM_NAME,CDM.cdm_name,JM.jm_name,qj.qj_name,t4.TO_WATER_NAME,
                WT.f_Checker_name,WT.r_Checker_name,
                round(TO_DATE(TO_CHAR(T3.TO_CDM_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss')
                -
                TO_DATE(TO_CHAR(T.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss'),2) tm_to_cdm_diff,
                
                round(TO_DATE(TO_CHAR(CDM.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss')
                -
                TO_DATE(TO_CHAR(T3.TO_CDM_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss'),2) to_cdm_cdm_diff,
                
                round(TO_DATE(TO_CHAR(CDM.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss')
                -
                TO_DATE(TO_CHAR(T.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss'),2) tm_cdm_diff,
                
                round(TO_DATE(TO_CHAR(JM.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss')
                -
                TO_DATE(TO_CHAR(CDM.PRODUCE_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss'),2) cdm_jm_diff,
                
                JM.PRODUCE_DT+ INTERVAL '4' HOUR jm_dt_add_4,
                
                CASE WHEN JM.PRODUCE_DT IS NULL THEN NULL ELSE 
                  TO_DATE(TO_CHAR(JM.PRODUCE_DT, 'yyyy/MM/dd') || ' 22:59:59', 'yyyy-MM-dd HH24:mi:ss') END 
                jm_dt_23,
                
                 CASE WHEN QJ.PRODUCE_DT IS NULL THEN NULL ELSE 
                  TO_DATE(TO_CHAR(QJ.PRODUCE_DT, 'yyyy/MM/dd') || ' 22:59:59', 'yyyy-MM-dd HH24:mi:ss') END 
                qj_dt_23,
                plan.plan_date,
                
                 round(TO_DATE(TO_CHAR(WT.F_CHECK_TM, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss')
                -
                TO_DATE(TO_CHAR(T4.TO_WATER_DT, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss'),2) to_water_fcheck_diff,
                
                 round(TO_DATE(TO_CHAR(WT.R_CHECK_TM, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss')
                -
                TO_DATE(TO_CHAR(WT.F_CHECK_TM, 'yyyy-MM-dd HH24:mi:ss'), 'yyyy-MM-dd HH24:mi:ss'),2) fcheck_rcheck_diff
                ,CDM.PRODUCE_DT -1 cdm_produce_dt_before
                ,jm.produce_dt - 1 jm_produce_dt_before
                ,jm.produce_dt + 1 jm_produce_dt_after
                ,T4.TO_WATER_DT +1 to_water_dt_after
                <!--,(SELECT if_rest from ks_base_calendar WHERE to_char(CDM.PRODUCE_DT -1,'yyyy-MM-dd') = calendar_date ) cdm_produce_dt_before_rest
                ,(SELECT if_rest from ks_base_calendar WHERE to_char(jm.produce_dt - 1,'yyyy-MM-dd') = calendar_date ) jm_produce_dt_before_rest
                ,(SELECT if_rest from ks_base_calendar WHERE to_char(jm.produce_dt + 1,'yyyy-MM-dd') = calendar_date ) jm_produce_dt_after_rest
                ,(SELECT if_rest from ks_base_calendar WHERE to_char(T4.TO_WATER_DT +1,'yyyy-MM-dd') = calendar_date ) to_water_dt_after_rest-->
               
           		,CDM.cdm_produce_dt_before_rest
                ,jm.jm_produce_dt_before_rest
                ,jm.jm_produce_dt_after_rest
                ,bc.calendar_date to_water_dt_after_rest
          FROM (SELECT *
                   FROM V_KS_TUMO_ORIGIN2
                  WHERE RECORD_ID IN (SELECT T.RECORD_ID
                                        FROM KS_COMPONENT_TEST_TRACE T
                                       WHERE T.CATEGORY = '涂膜')) T
          LEFT JOIN (SELECT cdm2.*,bs.staff_name cdm_name,bc.calendar_date cdm_produce_dt_before_rest
                       FROM QINSEN.INST_CAIDIEMO cdm2
                       LEFT JOIN qinsen.base_staff bs ON cdm2.worker_id=bs.staff_id
                       LEFT JOIN ks_base_calendar bc ON bc.calendar_date = to_char(CDM2.PRODUCE_DT -1,'yyyy-MM-dd')
                      WHERE ORDER_NO = '试卷') CDM
            ON CDM.TUMO_BATCH_ID = T.RECORD_ID
          LEFT JOIN QINSEN.PARA_MATER_SPEC CDMP
            ON CDMP.MATER_SPEC_ID = CDM.PROD_SPEC_ID
         
          LEFT JOIN (SELECT * FROM QINSEN.INST_JUANMO_DETAIL 
          WHERE main_batch_id NOT IN(SELECT t.main_batch_id from QINSEN.INST_JUANMO_DETAIL t
                GROUP BY t.main_batch_id
                HAVING COUNT(1)>1)
          ) JMD
          ON JMD.CDM_BATCH_ID = CDM.RECORD_ID
          LEFT JOIN 
          (SELECT jm2.*,bs.staff_name jm_name,bc.calendar_date jm_produce_dt_before_rest,bc2.calendar_date jm_produce_dt_after_rest
          FROM QINSEN.INST_JUANMO_MAIN jm2
          LEFT JOIN qinsen.base_staff bs ON jm2.worker_id=bs.staff_id
           LEFT JOIN ks_base_calendar bc ON bc.calendar_date = to_char(jm2.PRODUCE_DT -1,'yyyy-MM-dd') 
            LEFT JOIN ks_base_calendar bc2 ON bc.calendar_date = to_char(jm2.PRODUCE_DT + 1,'yyyy-MM-dd') 
           ) JM
            ON JM.RECORD_ID = JMD.MAIN_BATCH_ID
            
          LEFT JOIN (select ttt.cdm_batch_id,COUNT(1) cnt from QINSEN.INST_JUANMO_DETAIL ttt
          WHERE ttt.main_batch_id NOT IN(SELECT t.main_batch_id from QINSEN.INST_JUANMO_DETAIL t
                GROUP BY t.main_batch_id
                HAVING COUNT(1)>1)
          GROUP BY ttt.cdm_batch_id) t2 
          ON t2.cdm_batch_id = CDM.Record_Id            
            
          LEFT JOIN QINSEN.PARA_MATER_SPEC JMP
            ON JM.PROD_SPEC_ID = JMP.MATER_SPEC_ID
          LEFT JOIN 
          (SELECT qj2.*,bs.staff_name qj_name
          FROM QINSEN.INST_QIJIAN qj2
          LEFT JOIN qinsen.base_staff bs ON qj2.worker_id=bs.staff_id)  QJ
            ON QJ.JUANMO_BATCH_ID = JM.RECORD_ID
          LEFT JOIN 
          
          (select wt2.*,bs.staff_name f_checker_name,bs2.staff_name r_checker_name
           from QINSEN.INST_WATER_TEST wt2
            LEFT JOIN qinsen.base_staff bs ON wt2.f_checker_id=bs.staff_id
            LEFT JOIN qinsen.base_staff bs2 ON wt2.r_checker_id=bs2.staff_id) WT            
            ON WT.JUANMO_BATCH_ID = JM.RECORD_ID
          LEFT JOIN (SELECT TB.RECORD_ID,
                            TB.TEST_TYPE,
                            TB.CREATE_TIME TO_CDM_DT,
                            TB.Create_Name TO_CDM_NAME
                       FROM KS_COMPONENT_TEST_TRACE TB
                      WHERE TB.ID IN (SELECT MAX(ID)
                                        FROM KS_COMPONENT_TEST_TRACE T
                                       WHERE T.CATEGORY = '涂膜'
                                       GROUP BY T.RECORD_ID)) T3
            ON T3.RECORD_ID = T.RECORD_ID
          LEFT JOIN (SELECT TB.RECORD_ID,
                            TB.TEST_CONDITION,
                            TB.CREATE_TIME TO_WATER_DT,
                            TB.Create_Name TO_WATER_NAME
                       FROM KS_COMPONENT_TEST_TRACE TB
                      WHERE TB.ID IN (SELECT MAX(ID)
                                        FROM KS_COMPONENT_TEST_TRACE T
                                       WHERE T.CATEGORY = '卷膜'
                                       GROUP BY T.RECORD_ID)) T4
            ON T4.RECORD_ID = JM.RECORD_ID
            LEFT JOIN ks_base_calendar bc ON bc.calendar_date = to_char(t4.TO_WATER_DT + 1,'yyyy-MM-dd')
          LEFT JOIN (SELECT T.MP_SPEC_ID,
                            T.PROD_SPEC_ID,
                            T.A_GPD_LOW_LIMIT,
                            T.A_GPD_UP_LIMIT,
                            T.A_SALT_LOW_LIMIT
                       FROM KS_PROD_WATER_STD T) WSTD
            ON WSTD.MP_SPEC_ID = T.SPEC_ID
           AND WSTD.PROD_SPEC_ID = JM.PROD_SPEC_ID
           
           left join(select MAX(t.plan_date) plan_date,t.batch_no from KS_COMPONENT_PLAN_DAY t
      GROUP BY t.batch_no) plan on plan.batch_no = T.batch_no 
      where 1=1
           
         <isNotNull prepend="and" property="batchNo"> 
		       T.BATCH_NO = #batchNo#
	    </isNotNull>
	    <isNotNull prepend="and" property="jmBatchNo"> 
		       JM.BATCH_NO = #jmBatchNo#
	    </isNotNull>
	    <isNotNull prepend="and" property="testType"> 
		       T3.test_Type = #testType#
	    </isNotNull>
	    
	     <isNotNull prepend="and" property="lineId"> 
		       T.line_id = #lineId#
	    </isNotNull>
	    
	    <isNotNull prepend="and" property="mpSpecId"> 
		       T.spec_id = #mpSpecId#
	    </isNotNull>
	    
	    <isNotNull prepend="and" property="prodSpecId">
	    	CDMP.MATER_SPEC_ID = #prodSpecId#
	    </isNotNull>
         ORDER BY T.BATCH_NO, JM.BATCH_NO) T1

    </select>
    
    <select id="queryProdSpecName" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    
    SELECT pms.mater_spec_name "prodSpecName",pms.mater_spec_id "prodSpecId" from ks_base_sample_standard t1
    
    LEFT JOIN qinsen.para_mater_spec pms ON pms.mater_spec_id=t1.prod_spec_id
    
    </select>
    
    <select id="queryBaseCalendar" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    select t.calendar_date "calendarDate",t.weekday_number "weekdayNumber",t.if_rest "ifRest"
 	from KS_BASE_CALENDAR t
 	where 1=1
    <isNotNull prepend="and" property="yearmonth"> 
		       substr(t.calendar_date,0,7) = #yearmonth#
	    </isNotNull>
         ORDER BY T.calendar_date
    </select>
    
    <select id="queryYearmonth" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    SELECT yearmonth "yearmonth",
	replace(yearmonth,'-','年') || '月' "text"
	 from 
	(SELECT DISTINCT(substr(t.calendar_date,0,7)) yearmonth
	 from KS_BASE_CALENDAR t)
	ORDER BY 1
	</select>
	
	<select id="queryDate4PlanWeek" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
 	SELECT to_date(to_char(LAST_DAY(SYSDATE),'yyyy-MM-dd'),'yyyy-MM-dd') AS "endDate",
	to_date(to_char(SYSDATE,'yyyy-MM')|| '-01','yyyy-MM-dd') AS "startDate",
	to_char(SYSDATE,'yyyy') AS "planYear",
	to_date(to_char(SYSDATE,'yyyy-MM-dd'),'yyyy-MM-dd') AS "planDate"
	 FROM DUAL
    </select>
    
    <insert id="insertPlanWeekDays" parameterClass="java.util.HashMap" >
     INSERT INTO KS_COMPONENT_PLAN_WEEK_DAYS
  (ID,
   PLAN_DATE,
   CREATE_TIME,
   CREATE_USER_ID,
   CREATE_NAME,
   relation_id,
   order_id,amount)
  SELECT SEQ_COMPONENT_PLAN_DAY.NEXTVAL,
         TRUNC(TO_DATE(to_char(#startDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD') + LEVEL - 1),
         SYSDATE,
         #createUserId#,
         #createName#,
         #relationId#,
         #orderId#,5
    FROM DUAL
  CONNECT BY LEVEL &lt;= TRUNC(TO_DATE(to_char(#endDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD')) -
             TRUNC(TO_DATE(to_char(#startDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD')) + 1
   </insert>
   
   <select id="queryDiaphragmTest" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
  <!-- 	SELECT T1.MATER_SPEC_NAME AS "materSpecName",
       T1.MATER_SPEC_ID AS "materSpecId",
       T1.MATER_CODE AS "materCode",pms.new_batch_code "newBatchCode",
       T1.PROD_SPEC_NAME AS "prodSpecName", T1.PROD_SPEC_ID AS "prodSpecId",
       CASE
         WHEN INSTR(T1.PROD_SPEC_NAME, '-4') > 0 THEN
          10
         ELSE
          40.25
       END "length",
       nvl(bss.sample_length,0) "sampleLength",
       bss.sample_times "sampleTimes",
       nvl(bss.amount,0) "sampleAmount"
  FROM KS_BASE_DIAPHRAGM_TEST T1
  LEFT JOIN qinsen.para_mater_spec pms
	ON pms.mater_spec_id = t1.mater_spec_id
  LEFT JOIN  KS_BASE_SAMPLE_STANDARD bss
  ON bss.prod_spec_id = t1.prod_spec_id
  AND bss.mater_spec_id = t1.mater_spec_id
  -->
  
    SELECT bss.MATER_SPEC_NAME AS "materSpecName",
       bss.MATER_SPEC_ID AS "materSpecId",
       pms.mp_batch_code AS "materCode",pms.new_batch_code "newBatchCode",
       pms2.mater_SPEC_NAME AS "prodSpecName", bss.PROD_SPEC_ID AS "prodSpecId",
       CASE
         WHEN INSTR(bss.PROD_SPEC_NAME, '-4') > 0 THEN
          10
         ELSE
          40.25
       END "length",
       (nvl(bss.sample_length_low,0) + nvl(bss.sample_length_up,0))/2 "sampleLength",
       
       nvl(bss.sample_length_low,0) "sampleLengthLow",
       nvl(bss.sample_length_up,0) "sampleLengthUp",
       
       bss.sample_times "sampleTimes",
       nvl(bss.amount,0) "sampleAmount"
  FROM KS_BASE_SAMPLE_STANDARD bss
   LEFT JOIN qinsen.para_mater_spec pms
	ON pms.mater_spec_id = bss.mater_spec_id
	left join qinsen.para_mater_spec pms2
	on pms2.mater_spec_id = bss.prod_spec_id
	</select>
	
	<update id="updateCdmState" parameterClass="java.util.HashMap" >
	UPDATE KS_COMPONENT_DUTY_CDM t 
	SET t.cdm_state=0
	WHERE to_char(t.plan_date,'yyyy-MM-dd')=#planDate# AND t.order_id=#orderId#
    </update>
    
    <!--试卷元件送样卷制标准-->
     <select id="querySampleStandard" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	 SELECT T1.ID                AS "id",
      TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd HH24:mi:ss') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd HH24:mi:ss') "updateTime",
       T1.UPDATE_USER_ID    AS "updateUserId",
       T1.UPDATE_NAME       AS "updateName",
       T1.RESERVE1          AS "reserve1",
       T1.RESERVE2          AS "reserve2",
       T1.RESERVE3          AS "reserve3",
       T1.RESERVE4          AS "reserve4",
       T1.RESERVE5          AS "reserve5",
       T1.ORG_ID            AS "orgId",
       T1.STATUS            AS "status",
       pms.MATER_SPEC_NAME as "materSpecName",
    t1.MATER_SPEC_ID as "materSpecId",
    pms.MATER_SPEC_CODE as "materCode",
    pms2.mater_SPEC_NAME as "prodSpecName",
    t1.PROD_SPEC_ID as "prodSpecId",
    t1.sample_length as "sampleLength",
    
    t1.sample_length_low as "sampleLengthLow",
    t1.sample_length_up as "sampleLengthUp",
    
    t1.sample_times as "sampleTimes",
    t1.amount as "amount"       
  FROM KS_base_sample_standard T1
  left join qinsen.PARA_MATER_SPEC pms
  on pms.MATER_SPEC_ID = t1.MATER_SPEC_ID
  left join qinsen.PARA_MATER_SPEC pms2
  on pms2.MATER_SPEC_ID = t1.PROD_SPEC_ID
  where 1=1
   <isNotNull prepend="and" property="materSpecId"> 
		       t1.MATER_SPEC_ID = #materSpecId#
	    </isNotNull>
	    
	    <isNotNull prepend="and" property="prodSpecId">
	    	t1.PROD_SPEC_ID = #prodSpecId#
	    </isNotNull>
	     order by pms2.mater_SPEC_NAME
	</select>
   
   <!--更新生管订单干湿膜-->
    <update id="updateSGOrderDryWet" parameterClass="java.util.HashMap" >
	UPDATE KS_PROD_COMPONENT_YXORDER t
	SET t.dry_wet='干'
	WHERE t.order_no=#orderNo#
	and substr(t.order_no,1,2)='SG'
	AND t.dry_wet IS NULL 
    </update>
    
    <!--更新生管订单唛头-->
    <update id="updateSGOrderMark" parameterClass="java.util.HashMap" >
	UPDATE KS_PROD_COMPONENT_YXORDER t 
	SET t.template_name = (SELECT template_name FROM V_KS_SG_MARK_DRAWING v
	WHERE v.spec_name = t.mater_spec_name2)
	WHERE t.order_no=#orderNo#
	and substr(t.order_no,1,2)='SG'
	AND t.template_name IS NULL
	AND EXISTS(SELECT template_name FROM V_KS_SG_MARK_DRAWING v
	WHERE v.spec_name = t.mater_spec_name2)
    </update>
    
   <!--唛头图纸查询-->
     <select id="queryDrawingCode" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	 
    select t.drawing_code "templateName",t.spec_name,pms.mater_spec_id 
	from KS_BASE_MARK_DRAWING t
	LEFT JOIN qinsen.para_mater_spec pms
	ON pms.mater_spec_name=t.spec_name
	WHERE t.drawing_code LIKE 'KS-%'
	and pms.mater_spec_id = #prodSpecId#
	</select>
</sqlMap>