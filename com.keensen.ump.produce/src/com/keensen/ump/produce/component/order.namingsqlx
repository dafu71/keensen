<?xml version="1.0" encoding="UTF-8"?>
<!-- author:dafu -->
<sqlMap>
   
<select id="queryYxOrder" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	
	SELECT T1.ID AS "id",T1.base_ID AS "baseId",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",	
		T1.SCFS              AS "scfs",T1.reserve1 "reserve1",T1.reserve2 "reserve2",
       T1.BM                AS "bm",T1.template_Name                AS "templateName",
       T1.SFFH              AS "sffh",
       T1.ORDER_TYPE        AS "orderType",
       T1.TYPE              AS "type",
       T1.KHXJ              AS "khxj",
       T1.CPXJ              AS "cpxj",
       T1.DDXJ              AS "ddxj",
       T1.ORDER_NO          AS "orderNo",
       T1.ORDER_DATE        AS "orderDate",
       T1.HPMC              AS "hpmc",
       T1.DW                AS "dw",
       T1.MATER_SPEC_NAME   AS "materSpecName",T1.MATER_SPEC_Id   AS "materSpecId",
       T1.MATER_SPEC_NAME2   AS "materSpecName2",
       T1.CPGG              AS "cpgg",
       T1.DRY_WET           AS "dryWet",
       T1.ORDER_AMOUNT      AS "orderAmount",
       T1.DFH               AS "dfh",
       T1.XSC               AS "xsc",
       T1.SBKCGM            AS "sbkcgm",
       T1.SBKCSM            AS "sbkcsm",
       T1.BQ                AS "bq",
       T1.BAG               AS "bag",
       T1.BOX               AS "box",
       T1.MARK              AS "mark",
       T1.PACK              AS "pack",
       T1.PERFORMANCE       AS "performance",
       T1.REMARK            AS "remark",
       T1.DEMAND_STOCK_DATE AS "demandStockDate",
       T1.RKSL              AS "rksl",
       T1.JHWCSJ            AS "jhwcsj",
       T1.SCWCRQ            AS "scwcrq",
       T1.lid_tape            AS "lidTape",
       t2.cnt "cnt",
       decode(nvl(t2.cnt,0),0,'未制定','已制定') "ifplan",
       t3.arrange_amount   as "arrangeAmount",
       STD.A_GPD_LOW_LIMIT "gpdLowLimitStd",
       STD.A_GPD_UP_LIMIT "gpdUpLimitStd",
       STD.A_GPD_CENTER "gpdCenterStd",
       STD.A_SALT_LOW_LIMIT "saltLowLimitStd"
  FROM KS_PROD_COMPONENT_YXORDER T1
  left join QINSEN.INST_PROD_WATER_STD std 
  on T1.MATER_SPEC_Id = std.prod_spec_id
  left join (select relation_id ,count(*) cnt from KS_COMPONENT_PLAN_WEEK group by relation_id) t2 
	on t2.relation_id = t1.id
  left join (select sum(amount) arrange_amount,order_id from KS_COMPONENT_PLAN_WEEK_DAYS group by order_id) t3
    on t1.id = t3.order_id
	where 1=1
	
	<isNotNull prepend="and" property="prodSpecId"> 
		       T1.MATER_SPEC_Id = #prodSpecId#
	</isNotNull>
	
	<isNotNull prepend="and" property="orderSpecName"> 
		       T1.MATER_SPEC_NAME2 = #orderSpecName#
	</isNotNull>
	
	<isEqual prepend="and" property="prodSpecIdNull" compareValue="Y">>
			  T1.MATER_SPEC_Id is null
	</isEqual>
	
	<isNotNull prepend="and" property="orderNo2"> 
		       T1.ORDER_NO like '%' || #orderNo2# || '%'
	</isNotNull>
	<isNotNull prepend="and" property="orderNo"> 
		       T1.ORDER_NO = #orderNo#
	</isNotNull>
	 <isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
	<isNotNull prepend="and" property="id"> 
		       T1.ID = #id#
	</isNotNull>
	<isNotNull prepend="and" property="materSpecName"> 
		       upper(t1.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName2"> 
		       upper(t1.MATER_SPEC_NAME) = upper(#materSpecName2#) 
	</isNotNull>
	
	<isNotNull prepend="and" property="dMaterSpecName"> 
		       upper(t1.MATER_SPEC_NAME2) = upper(#dMaterSpecName#) 
	</isNotNull>
	
	 <isNotNull prepend = "and"  property = "orderDateStart"> 
          to_char(t1.order_Date,'yyyy-MM-dd')  &gt;=  #orderDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "orderDateEnd"> 
          to_char(t1.order_Date,'yyyy-MM-dd')  &lt;=  #orderDateEnd#
     </isNotNull>
     
     <isNotNull prepend = "and"  property = "ifplan2">
      decode(nvl(t2.cnt,0),0,'N','Y') = #ifplan2#
      </isNotNull>
      
      <isNotNull prepend = "and"  property = "planDateStart"> 
       exists(select 1 from KS_COMPONENT_PLAN_DAY pd
       where t1.id = pd.order_id and 
          to_char(pd.plan_date,'yyyy-MM-dd')  &gt;=  #planDateStart#)
     </isNotNull>
     <isNotNull prepend = "and"  property = "planDateEnd"> 
     exists(select 1 from KS_COMPONENT_PLAN_DAY pd
       where t1.id = pd.order_id and 
          to_char(pd.plan_date,'yyyy-MM-dd')  &lt;=  #planDateEnd#)
     </isNotNull>
     
     <isEqual prepend="and" property="isJuanmo" compareValue="Y">
	  exists( select 1 from KS_COMPONENT_DUTY_JM jm where jm.order_id = t1.id)
	</isEqual>
	
	 <isEqual prepend="and" property="isRaosi" compareValue="Y">
	  exists( select 1 from V_KS_RAOSI v where v.order_id = t1.id)
	</isEqual>
     
     order by t1.id desc
	 </select>
	 
	 
	 <select id="queryPlanWeek" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	
	SELECT T1.ID AS "id",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",	
		T1.RELATION_ID     AS "relationId",
       T1.PLAN_YEAR       AS "planYear",
       T1.PLAN_WEEK       AS "planWeek",
       T1.ENTER_DATE      AS "enterDate",
       T1.AMOUNT          AS "amount",
       T1.JM_AMOUNT       AS "jmAmount",
       T1.ENTER_AMOUNT    AS "enterAmount",
       T1.WAIT_AMOUNT     AS "waitAmount",
       T1.REMARK          AS "remark",
       T1.START_DATE      AS "startDate",
       T1.END_DATE        AS "endDate",
       T2.BM              AS "bm",
       T2.ORDER_NO        AS "orderNo",
       T2.MATER_SPEC_NAME AS "materSpecName",
       T2.MATER_SPEC_ID AS "materSpecId",
       T2.DRY_WET         AS "dryWet",
       T2.BQ              AS "bq",
       T2.PERFORMANCE     AS "performance",
       T2.ORDER_DATE      AS "orderDate",
       t2.order_amount    AS "orderAmount",
       t2.xsc             AS "xsc",
       t3.cnt             AS "cnt",
       t4.arrange_amount   as "arrangeAmount",
       t5.num_per_wad "numPerWad",
       t5.blanking_size "blankingSize",
       t5.dense_net "denseNet",
       t5.area "area",t5.page_width "pageWidth"
  FROM KS_COMPONENT_PLAN_WEEK T1
  left join KS_PROD_COMPONENT_YXORDER t2
  ON T1.relation_id = t2.id
  LEFT JOIN qinsen.para_mater_spec t5
  ON t5.mater_spec_id = t2.mater_spec_id
  left join (select relation_id ,count(*) cnt from KS_COMPONENT_PLAN_DAY group by relation_id) t3 
	on t3.relation_id = t1.id
  left join (select sum(amount) arrange_amount,relation_id from KS_COMPONENT_PLAN_WEEK_DAYS group by relation_id) t4
    on t1.id = t4.relation_id
	where 1=1
	<isNotNull prepend="and" property="planYear"> 
		       T1.PLAN_YEAR  = #planYear#
	</isNotNull>
	<isNotNull prepend="and" property="planWeek"> 
		       T1.PLAN_WEEK = #planWeek#
	</isNotNull>
	<isNotNull prepend="and" property="relationId"> 
		       T1.relation_id = #relationId#
	</isNotNull>
	<isNotNull prepend="and" property="orderNo"> 
		       T2.ORDER_NO = #orderNo#
	</isNotNull>
	
	<isNotNull prepend="and" property="orderNo2"> 
		       T2.ORDER_NO like '%' || #orderNo2# || '%'
	</isNotNull>
	
	 <isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
	<isNotNull prepend="and" property="id"> 
		       T1.ID = #id#
	</isNotNull>
	<isNotNull prepend="and" property="materSpecName"> 
		       upper(t2.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName2"> 
		       upper(t2.MATER_SPEC_NAME) = upper(#materSpecName2#) 
	</isNotNull>
	
	 <isNotNull prepend = "and"  property = "orderDateStart"> 
          to_char(t2.order_Date,'yyyy-MM-dd')  &gt;=  #orderDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "orderDateEnd"> 
          to_char(t2.order_Date,'yyyy-MM-dd')  &lt;=  #orderDateEnd#
     </isNotNull>
     order by t1.relation_Id desc,t1.id desc
	 </select>
	 
	  <insert id="insertPlanWeekDays" parameterClass="java.util.HashMap" >
     INSERT INTO KS_COMPONENT_PLAN_WEEK_DAYS
  (ID,
   PLAN_DATE,
   CREATE_TIME,
   CREATE_USER_ID,
   CREATE_NAME,
   relation_id,
   order_id)
  SELECT SEQ_COMPONENT_PLAN_DAY.NEXTVAL,
         TRUNC(TO_DATE(to_char(#startDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD') + LEVEL - 1),
         SYSDATE,
         #createUserId#,
         #createName#,
         #relationId#,
         #orderId#
    FROM DUAL
  CONNECT BY LEVEL &lt;= TRUNC(TO_DATE(to_char(#endDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD')) -
             TRUNC(TO_DATE(to_char(#startDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD')) + 1
   </insert>
   
   
   <insert id="addPlanWeekDays" parameterClass="java.util.HashMap" >
     INSERT INTO KS_COMPONENT_PLAN_WEEK_DAYS
  (ID,
   PLAN_DATE,
   CREATE_TIME,
   CREATE_USER_ID,
   CREATE_NAME,
   relation_id,
   order_id)
 SELECT SEQ_COMPONENT_PLAN_DAY.NEXTVAL,
       TRUNC((SELECT T.END_DATE
                FROM KS_COMPONENT_PLAN_WEEK T
               WHERE T.ID = #id#) + LEVEL),
       SYSDATE,
       (SELECT T.create_User_Id
                FROM KS_COMPONENT_PLAN_WEEK T
               WHERE T.ID = #id#),
        (SELECT T.create_Name
                FROM KS_COMPONENT_PLAN_WEEK T
               WHERE T.ID = #id#),
         #id#,
         (SELECT T.relation_id
                FROM KS_COMPONENT_PLAN_WEEK T
               WHERE T.ID = #id#)
       FROM DUAL
CONNECT BY LEVEL &lt; TRUNC(TO_DATE(to_char(#endDate#, 'YYYY-MM-DD'), 'YYYY-MM-DD')) -
           TRUNC((SELECT T.END_DATE
                           FROM KS_COMPONENT_PLAN_WEEK T
                          WHERE T.ID = #id#)) + 1
   </insert>
   
   
   <select id="queryPlanDate" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   SELECT to_date(TRUNC(TO_DATE(#startDate#, 'YYYY-MM-DD') + LEVEL - 1)) as "planDate"
    FROM DUAL
  CONNECT BY LEVEL &lt;= TRUNC(TO_DATE(#endDate#, 'YYYY-MM-DD')) -
             TRUNC(TO_DATE(#startDate#, 'YYYY-MM-DD')) + 1
   </select>
   
   <select id="queryPlanDay" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	
   	 SELECT T1.ID AS "id",t1.confirm_Status "confirmStatus",T1.cdm_code "cdmCode"
   	 ,T1.cdm_state "cdmState", decode(nvl(T1.cdm_state,0),0,'处理中',1,'完成',2,'异常','') "cdmStateName",
   	 TO_CHAR(T1.duty_TIME, 'yyyy-MM-dd HH24:mi:ss') "dutyTime",
       T1.duty_USER_ID AS "dutyUserId",
       T1.duty_NAME AS "dutyName",
        TO_CHAR(T1.cdm_report_TIME, 'yyyy-MM-dd HH24:mi:ss') "cdmReportTime",
       T1.cdm_report_USER_ID AS "cdmReportUserId",
       T1.cdm_report_NAME AS "cdmReportName",
       T1.jm_code "jmCode"
   	 ,T1.jm_state "jmState", decode(nvl(T1.jm_state,0),0,'处理中',1,'完成',2,'异常','') "jmStateName",
   	 TO_CHAR(T1.DUTY_JM_TIME, 'yyyy-MM-dd HH24:mi:ss') "dutyJmTime",
       T1.duty_JM_USER_ID AS "dutyJmUserId",
       T1.duty_JM_NAME AS "dutyJmName",
        TO_CHAR(T1.jm_report_TIME, 'yyyy-MM-dd HH24:mi:ss') "jmReportTime",
       T1.jm_report_USER_ID AS "jmReportUserId",
       T1.jm_report_NAME AS "jmReportName",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",  
     T1.RESERVE1        AS "reserve1",
       T1.RESERVE2        AS "reserve2",
       T1.RESERVE3        AS "reserve3",
       T1.RESERVE4        AS "reserve4",
       T1.RESERVE5        AS "reserve5",
       T1.ORG_ID          AS "orgId",
       T1.STATUS          AS "status",
       T1.RELATION_ID     AS "relationId",
       T1.ORDER_ID        AS "orderId",
       T1.PLAN_DATE       AS "planDate",T1.arrange_DATE       AS "arrangeDate",
       T1.JM_AMOUNT       AS "jmAmount",
       T1.BATCH_NO        AS "batchNo",
       T1.METER_AMOUNT    AS "meterAmount",
       nvl(T1.POSITION,' ')        AS "position",
       T1.MP_REMARK       AS "mpRemark",
       T1.PROBLEM         AS "problem",
       <!--T5.PRODUCT_ORDER   AS "productOrder"-->T1.PRODUCT_ORDER   AS "productOrder",
       T1.cm_worker       AS "cmWorker",
       decode(INSTR(T1.cm_worker, '('),0,T1.cm_worker,SUBSTR(T1.cm_worker,1,INSTR(T1.cm_worker, '(')-1)) AS "cmWorker2",
       T3.ORDER_NO        AS "orderNo",
       T3.MATER_SPEC_NAME AS "materSpecName",
       T3.MATER_SPEC_ID AS "materSpecId",kbd.mater_code "materSpecCode",
       T3.ORDER_AMOUNT    AS "orderAmount",
       T3.XSC             AS "xsc",to_char(T3.demand_Stock_Date,'yyyy-MM-dd')      AS "demandStockDate",
       to_char(T3.ORDER_DATE,'yyyy-MM-dd')      AS "orderDate",T5.order_Remark "orderRemark",
       T2.PLAN_YEAR       AS "planYear",
       T2.PLAN_WEEK       AS "planWeek",
       T2.ENTER_DATE      AS "enterDate",
       T2.REMARK          AS "weekRemark",
       t55.test_yj_spec_name  "prodSpecName",
       t55.yj_Gpd_Avg  "testAvgGpd",
       t55.test_Yj_Salt  "saltRejection",
       t55.test_yj_spec_name "testMaterSpec",
       t55.test_mp_batch_no "testBatchNo",
       t55.test_yj_gpd "testGpd",
       t55.test_yj_salt "testSaltRejection2" ,
       t1.storage_name "storageName",
       nvl(t1.storage_position, ' ') "storagePosition" ,
       nvl(t1.storage_name,' ') "storageName2",
       nvl(t1.storage_position, ' ') "storagePosition2" ,
       TO_CHAR(t1.confirm_date, 'yyyy-MM-dd') "confirmDate" ,
       t6.cnt "cnt" ,
       decode(instr(T3.MATER_SPEC_NAME,'8040'),0,'4寸','8寸') "size"  ,
       nvl(t8.residue,0) "residue",t8.IS_CUT_OVER "isCutOver",
       t66.yj_Gpd_Avg  "yjAvgGpd",cnt.cnt "cnt2"
  FROM KS_COMPONENT_PLAN_DAY T1 
  LEFT JOIN (select t.plan_date,t.batch_no,COUNT(1) cnt from KS_COMPONENT_PLAN_DAY t
  GROUP BY t.plan_date,t.batch_no ) cnt ON cnt.batch_no = t1.batch_no AND cnt.plan_date = t1.plan_date
  LEFT JOIN (select t.batch_no,t.USEFUL_LENGTH-t.CAIMO_LENGTH residue,t.spec_id,t.IS_CUT_OVER from V_KS_TUMO_ORIGIN2 t) t8
      ON t8.batch_no=t1.batch_no
  LEFT JOIN KS_COMPONENT_PLAN_WEEK T2
    ON T1.RELATION_ID = T2.ID 
  left join (SELECT COUNT(1) cnt,t.relation_id,t.plan_date from KS_COMPONENT_PLAN_DAY t
  GROUP BY t.relation_id,t.plan_date) t6 on t6.relation_id=T2.ID and t1.plan_date = t6.plan_date 
  left join KS_COMPONENT_PLAN_WEEK_DAYS t5
    on T2.ID = T5.RELATION_ID and t1.plan_date = t5.plan_date
       
  LEFT JOIN KS_PROD_COMPONENT_YXORDER T3
    ON T3.ID = T2.RELATION_ID
  left join KS_BASE_DIAPHRAGM kbd
    on kbd.mater_spec_id = t8.spec_id
LEFT JOIN KS_COMPONENT_MP_SELECT t55  
    on t55.mp_batch_no = t1.batch_No 
LEFT JOIN v_KS_COMPONENT_MP_SELECT t66
ON t66.mp_batch_no = t1.batch_No AND T3.MATER_SPEC_ID = t66.MATER_SPEC_ID 
  where 1=1
  
  <isNotNull prepend="and" property="batchNoStr"> 
  T1.BATCH_NO in($batchNoStr$)
  </isNotNull>
  <!--
	SELECT T1.ID AS "id",t1.confirm_Status "confirmStatus",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",	
		 T1.RESERVE1        AS "reserve1",
       T1.RESERVE2        AS "reserve2",
       T1.RESERVE3        AS "reserve3",
       T1.RESERVE4        AS "reserve4",
       T1.RESERVE5        AS "reserve5",
       T1.ORG_ID          AS "orgId",
       T1.STATUS          AS "status",
       T1.RELATION_ID     AS "relationId",
       T1.ORDER_ID        AS "orderId",
       T1.PLAN_DATE       AS "planDate",
       T1.JM_AMOUNT       AS "jmAmount",
       T1.BATCH_NO        AS "batchNo",
       T1.METER_AMOUNT    AS "meterAmount",
       T1.POSITION        AS "position",
       T1.MP_REMARK       AS "mpRemark",
       T1.PROBLEM         AS "problem",
       T5.PRODUCT_ORDER   AS "productOrder",
       T1.cm_worker       AS "cmWorker",
       decode(INSTR(T1.cm_worker, '('),0,T1.cm_worker,SUBSTR(T1.cm_worker,1,INSTR(T1.cm_worker, '(')-1)) AS "cmWorker2",
       T3.ORDER_NO        AS "orderNo",
       T3.MATER_SPEC_NAME AS "materSpecName",
       T3.MATER_SPEC_ID AS "materSpecId",
       T3.ORDER_AMOUNT    AS "orderAmount",
       T3.XSC             AS "xsc",
       to_char(T3.ORDER_DATE,'yyyy-MM-dd')      AS "orderDate",T5.order_Remark "orderRemark",
       T2.PLAN_YEAR       AS "planYear",
       T2.PLAN_WEEK       AS "planWeek",
       T2.ENTER_DATE      AS "enterDate",
       T2.REMARK          AS "weekRemark",
       t5.mater_spec_name  "prodSpecName",
       t5.test_avg_gpd  "testAvgGpd",
       t5.salt_rejection  "saltRejection",
       t5.test_Mater_Spec "testMaterSpec",
       t5.test_batch_no "testBatchNo",
       t5.test_gpd "testGpd",
       t5.test_salt_Rejection2 "testSaltRejection2" ,
       t1.storage_name "storageName",
       t1.storage_position "storagePosition" ,
       nvl(t1.storage_name,' ') "storageName2",
       nvl(t1.storage_position, ' ') "storagePosition2" ,
       TO_CHAR(t1.confirm_date, 'yyyy-MM-dd') "confirmDate" ,
       t6.cnt "cnt" ,
       decode(instr(T3.MATER_SPEC_NAME,'-8'),0,'4寸','8寸') "size"  ,
       nvl(t8.residue,0) "residue"
  FROM KS_COMPONENT_PLAN_DAY T1  
  LEFT JOIN (select t.batch_no,t.USEFUL_LENGTH-t.CAIMO_LENGTH residue from V_KS_TUMO_ORIGIN2 t) t8
      ON t8.batch_no=t1.batch_no
  LEFT JOIN KS_COMPONENT_PLAN_WEEK T2
    ON T1.RELATION_ID = T2.ID 
  left join (SELECT COUNT(1) cnt,t.relation_id,t.plan_date from KS_COMPONENT_PLAN_DAY t
	GROUP BY t.relation_id,t.plan_date) t6 
	on t6.relation_id=T2.ID and t1.plan_date = t6.plan_date 
  left join KS_COMPONENT_PLAN_WEEK_DAYS t5
    on T2.ID = T5.RELATION_ID and t1.plan_date = t5.plan_date
       
  LEFT JOIN KS_PROD_COMPONENT_YXORDER T3
    ON T3.ID = T2.RELATION_ID
  
  left join (select t.tumo_batch_no,t.tumo_batch_id,t.test_avg_gpd,t.salt_rejection,t.prod_spec_id,m.mater_spec_name, 
  t.test_Mater_Spec,t.test_batch_no,t.test_gpd,t.test_salt_Rejection2,t.storage_name,t.storage_position
  from KS_COMPONENT_TUMO_SELECT t
	LEFT JOIN QINSEN.PARA_MATER_SPEC m ON m.mater_spec_id = t.prod_spec_id
	WHERE t.flag='合格') t5
    on t5.tumo_batch_no = t1.batch_No  AND T3.MATER_SPEC_ID = t5.prod_spec_id
	where 1=1
	-->
	<isNotNull prepend="and" property="planYear"> 
		       T2.PLAN_YEAR  = #planYear#
	</isNotNull>
	<isNotNull prepend="and" property="planWeek"> 
		       T2.PLAN_WEEK = #planWeek#
	</isNotNull>
	<isNotNull prepend="and" property="relationId"> 
		       T1.relation_id = #relationId#
	</isNotNull>
	<isNotNull prepend="and" property="orderNo"> 
		       T3.ORDER_NO = #orderNo#
	</isNotNull>
	 <isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
	<isNotNull prepend="and" property="id"> 
		       T1.ID = #id#
	</isNotNull>
	<isNotNull prepend="and" property="materSpecName"> 
		       upper(t3.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName2"> 
		       upper(t3.MATER_SPEC_NAME) = upper(#materSpecName2#) 
	</isNotNull>
	
	 <isNotNull prepend = "and"  property = "orderDateStart"> 
          to_char(t3.order_Date,'yyyy-MM-dd')  &gt;=  #orderDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "orderDateEnd"> 
          to_char(t3.order_Date,'yyyy-MM-dd')  &lt;=  #orderDateEnd#
     </isNotNull>
     
     <isNotNull prepend = "and"  property = "planDateStart"> 
          to_char(T1.PLAN_DATE,'yyyy-MM-dd')  &gt;=  #planDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "planDateEnd"> 
          to_char(T1.PLAN_DATE,'yyyy-MM-dd')  &lt;=  #planDateEnd#
     </isNotNull>
     
    
      <isNotNull prepend = "and"  property = "planDate"> 
          to_char(T1.PLAN_DATE,'yyyy-MM-dd')  =  #planDate#
     </isNotNull>
     
   
     <isNotNull prepend="and" property="orderId"> 
     T1.ORDER_ID = #orderId#
     </isNotNull>
     
     <isNotNull prepend = "and"  property = "size"> 
     decode(instr(T3.MATER_SPEC_NAME,'8040'),0,'4','8') = #size#
      </isNotNull>
      
      <isNotNull prepend="and" property="machineCode"> 
		       T1.cdm_code = #machineCode# 
	</isNotNull>
      
      
      <isNull prepend = ""  property = "orderby"> 
     order by T1.PLAN_DATE , t3.id desc,t2.id,t1.id
      </isNull>      
     
     <isNotNull prepend = ""  property = "orderby"> 
     order by T1.PLAN_DATE desc,t1.cdm_Code,t1.product_Order
      </isNotNull>
	 </select>
	 
	 <select id="queryPlanRoll" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	
	SELECT T1.ID AS "id",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",	
		 T1.RESERVE1        AS "reserve1",
       T1.RESERVE2        AS "reserve2",
       T1.RESERVE3        AS "reserve3",
       T1.RESERVE4        AS "reserve4",
       T1.RESERVE5        AS "reserve5",
       T1.ORG_ID          AS "orgId",
       T1.STATUS          AS "status",
       T1.RELATION_ID     AS "relationId",
       t1.RELATION_ID as "relationId",
       T1.BATCH_NO        AS "batchNo",
       T1.METER_AMOUNT    AS "meterAmount",
       T1.POSITION        AS "position",
		t1.ORDER_ID as "orderId",
		t1.JM_AMOUNT as "jmAmount",
		t1.WORK_DATE as "workDate",
		t1.RISK as "risk",
		t1.PROBLEM as "problem",
       T3.ORDER_NO        AS "orderNo",
       T3.MATER_SPEC_NAME AS "materSpecName",
       T3.ORDER_AMOUNT    AS "orderAmount",
       T3.XSC             AS "xsc",
       T3.ORDER_DATE      AS "orderDate",
       T2.PLAN_YEAR       AS "planYear",
       T2.PLAN_WEEK       AS "planWeek",
       T2.ENTER_DATE      AS "enterDate",
       T2.REMARK          AS "weekRemark"
  FROM KS_COMPONENT_PLAN_ROLL T1
  LEFT JOIN KS_COMPONENT_PLAN_WEEK T2
    ON T1.RELATION_ID = T2.ID
  LEFT JOIN KS_PROD_COMPONENT_YXORDER T3
    ON T3.ID = T2.RELATION_ID
	where 1=1
	<isNotNull prepend="and" property="planYear"> 
		       T2.PLAN_YEAR  = #planYear#
	</isNotNull>
	<isNotNull prepend="and" property="planWeek"> 
		       T2.PLAN_WEEK = #planWeek#
	</isNotNull>
	<isNotNull prepend="and" property="relationId"> 
		       T1.relation_id = #relationId#
	</isNotNull>
	<isNotNull prepend="and" property="orderNo"> 
		       T3.ORDER_NO = #orderNo#
	</isNotNull>
	 <isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
	<isNotNull prepend="and" property="id"> 
		       T1.ID = #id#
	</isNotNull>
	<isNotNull prepend="and" property="materSpecName"> 
		       upper(t3.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName2"> 
		       upper(t3.MATER_SPEC_NAME) = upper(#materSpecName2#) 
	</isNotNull>
	
	 <isNotNull prepend = "and"  property = "orderDateStart"> 
          to_char(t3.order_Date,'yyyy-MM-dd')  &gt;=  #orderDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "orderDateEnd"> 
          to_char(t3.order_Date,'yyyy-MM-dd')  &lt;=  #orderDateEnd#
     </isNotNull>
     order by t2.id desc,t1.id
	 </select>
	 
	 <select id="queryPlanWeekDays" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	
	SELECT T1.ID AS "id",t2.order_no "orderNo",t2.mater_spec_name "materSpecName",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",	
		 T1.RESERVE1        AS "reserve1",
       T1.RESERVE2        AS "reserve2",
       T1.RESERVE3        AS "reserve3",
       T1.RESERVE4        AS "reserve4",
       T1.RESERVE5        AS "reserve5",
       T1.ORG_ID          AS "orgId",
       T1.STATUS          AS "status",
       T1.RELATION_ID     AS "relationId",
       T1.ORDER_ID        AS "orderId",
       T1.PLAN_DATE      AS "planDate",
       nvl(T1.AMOUNT,0)         AS "amount", nvl(t3.selected,0) "selected",
       nvl(t5.num_Per_Wad,0) * nvl(t5.blanking_Size,0) * nvl(T1.AMOUNT,0) * nvl(T5.page_width,0) "useAmount",
       nvl(t5.num_Per_Wad,0) * nvl(t5.blanking_Size,0) * nvl(T1.AMOUNT,0) * nvl(T5.page_width,0) - nvl(t3.selected,0) "needAmount",
       t1.PRODUCT_ORDER "productOrder",
       t1.ORDER_REMARK  "orderRemark",
       to_char(T1.PLAN_DATE,'D') AS "weekday",
       '星期' || DECODE(to_char(T1.PLAN_DATE,'D'),1,'日 ',2 ,'一',3,'二',4,'三',5,'四',6,'五','六') "weekdayname"
  FROM KS_COMPONENT_PLAN_WEEK_DAYS T1
  left join KS_PROD_COMPONENT_YXORDER t2 
  on t2.id =t1.order_id
  LEFT JOIN qinsen.para_mater_spec t5
  ON t5.mater_spec_id = t2.mater_spec_id
  left join (select sum(t.meter_amount) selected,t.relation_id,t.plan_date from KS_COMPONENT_PLAN_DAY t
	GROUP BY t.relation_id,t.plan_date) t3
  on t3.relation_id = t1.relation_id and T1.PLAN_DATE = t3.PLAN_DATE
  
	where 1=1
	
	<isNotNull prepend="and" property="relationId"> 
		       T1.relation_id = #relationId#
	</isNotNull>
	
     order by T1.RELATION_ID,t1.id desc
	 </select>
	 
	 <select id="queryYxOrderTrace" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	
	SELECT T1.ID AS "id",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",	
		T1.SCFS              AS "scfs",
       T1.BM                AS "bm",
       T1.SFFH              AS "sffh",
       T1.ORDER_TYPE        AS "orderType",
       T1.TYPE              AS "type",
       T1.KHXJ              AS "khxj",
       T1.CPXJ              AS "cpxj",
       T1.DDXJ              AS "ddxj",
       T1.ORDER_NO          AS "orderNo",
       T1.ORDER_DATE        AS "orderDate",
       T1.HPMC              AS "hpmc",
       T1.DW                AS "dw",T1.MATER_SPEC_NAME2   AS "materSpecName2",
       T1.MATER_SPEC_NAME   AS "materSpecName",T1.MATER_SPEC_ID   AS "materSpecId",chk.apply_amount "applyAmount",
        
        case when nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0)= 0 then 0
        else round(100 * nvl(chk.apply_amount,0)/nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0)  
        end 
        "applyPercent",
        
        case when nvl(chk.apply_amount,0) >= nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0) then '完成'
        when nvl(t2.amount,0)=0 then '未投料'
        else '进行中' end "applyState" ,
        
        
       T1.CPGG              AS "cpgg",
       T1.DRY_WET           AS "dryWet",
       T1.ORDER_AMOUNT      AS "orderAmount",nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT)      AS "prodAmount",
       T1.DFH               AS "dfh",
       T1.XSC               AS "xsc",
       T1.SBKCGM            AS "sbkcgm",
       T1.SBKCSM            AS "sbkcsm",
       T1.BQ                AS "bq",
       T1.BAG               AS "bag",
       T1.BOX               AS "box",
       T1.MARK              AS "mark",
       T1.PACK              AS "pack",
       T1.PERFORMANCE       AS "performance",
       T1.REMARK            AS "remark",
       T1.DEMAND_STOCK_DATE AS "demandStockDate",
       T1.RKSL              AS "rksl",
       T1.JHWCSJ            AS "jhwcsj",
       T1.SCWCRQ            AS "scwcrq",
       T1.lid_tape            AS "lidTape",
       T1.lid            AS "lid",
       T1.tape            AS "tape",
       T1.tray            AS "tray",
       t2.amount AS "cdmAmount",
       t3.amount "jmAmount",
       t4.amount "qjAmount",t4.qualified_amount "qualifiedAmount",
       t6.amount "wetAmount",
       <!--未贴标数=订单数量（本页面）-贴本订单的标签数（本页面）-->
       <!--nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0)-(nvl(t4.release_amount,0) + nvl(t4.qualified_amount,0)) "notLabelAmount",-->
       nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0) - nvl(t7.amount,0) "notLabelAmount",
       <!--贴本订单的标签数量（暂时）-->
       <!--气检合格的元件贴标数+工艺员给出“A、放行原订单”的贴标数（或工艺员意见当中有“主行”字眼的记录）-湿膜数量（湿膜订单不用减）-->
       <!--气检合格的元件贴标数+工艺员“工艺结论”中A、放行原订单”的元件贴标数+原来“工艺员意见备注”当中有“放行”字眼元件贴标数（考虑旧意见存在）-->
       <!--t4.label_amount "labelAmount",-->
       <!--贴本订单的标签数量（张）取“气检工单”的显示界面当中“气检累计贴标数量”-->
       <!--nvl(t4.release_amount,0) + nvl(t4.qualified_amount,0) "labelAmount",-->
       <!--t4.amount "labelAmount",-->
       
       <!--贴本订单的标签数量（张）-->
       nvl(t7.amount,0) "labelAmount",
       
       <!--理论可贴标的元件数（支）理论可贴标的元件数（支）=气检合格的元件贴标数+工艺员给出“A、放行原订单”的贴标数（或工艺员意见当中有“放行”字眼的记录）-->
       nvl(t4.release_amount,0) + nvl(t4.qualified_amount,0) "theoryAmount",
       t5.amount "rsAmount",
		round(100*t2.amount/nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),10000000000000),0) || '%' "cdmFinish",
		round(100*t3.amount/nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),10000000000000),0) || '%' "jmFinish",
		<!--完成比例=贴本订单的标签数量/气检生产数量*100%-->
		<!--round(100*t4.label_amount/t4.amount,0) || '%' "qjFinish",-->
		<!-- round(100*(nvl(t4.release_amount,0) + nvl(t4.qualified_amount,0))/t4.amount,0) || '%' "qjFinish",-->
		 <!--贴本订单的标签数量/气检生产数量*100%-->
		 <!--round(100*t4.label_amount/t4.amount,0) || '%' "qjFinish",-->
		 
		 <!--贴本订单的标签数量（张）-->
		  decode(NVL(T7.AMOUNT, 0),0,0 ,round(100* nvl(t7.amount,0)/nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),10000000000000),0)) || '%' "qjFinish",
		 
		 
		round(100*t5.amount/nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),10000000000000),0) || '%' "rsFinish",
		round(t1.demand_stock_date-SYSDATE,2) "diff",
		round(SYSDATE - t1.demand_stock_date,2) "diff2",
		
		nvl(inamount.amount,0) "inAmount",
		nvl(outamount.amount,0) "outAmount"
		
  FROM KS_PROD_COMPONENT_YXORDER T1
  left join (SELECT SUM(1) amount,order_no,prod_spec_id from (
select qj.batch_no,t.order_no,t.prod_spec_id FROM qinsen.inst_qijian qj 
LEFT JOIN KS_COMPONENT_DUTY_SN_QUERY t ON qj.batch_no>=t.sn_start AND qj.batch_no &lt;=t.sn_end 
WHERE t.order_no IS NOT NULL) GROUP BY order_no,prod_spec_id) t7
ON t7.order_no = t1.order_no AND t1.mater_spec_id=t7.prod_spec_id
  
  <!--改订单号进入元件数=“气检工序批量改订单号界面”新订单号为本订单号的元件数量+“白膜仓改订单号界面“改做订单号”的元件数量-->
  left join (select t.qj_order_no order_no,t.qj_spec_id prod_spec_id,COUNT(1) amount from KS_JM_QJ_DIFF t
GROUP BY t.qj_order_no,t.qj_spec_id) inamount 
on t1.order_no=inamount.order_no AND t1.mater_spec_id=inamount.prod_spec_id
  <!--改订单号移出元件数=“气检工序批量改订单号界面”勾选被改订单号的元件数量+“白膜仓改订单号界面“原做订单号”的元件数量-->
   left join (select t.jm_order_no order_no,t.jm_spec_id prod_spec_id,COUNT(1) amount from KS_JM_QJ_DIFF t
GROUP BY t.jm_order_no,t.jm_spec_id) outamount 
on t1.order_no=outamount.order_no AND t1.mater_spec_id=outamount.prod_spec_id
 
  left join
  (SELECT COUNT(1) apply_amount, order_no,prod_spec_name
FROM(
select t.batch_no,t2.order_no,t2.prod_spec_name from KS_COMPONENT_CHECK_LIST t
LEFT JOIN KS_COMPONENT_CHECK_HEAD t2 ON t.relation_id=t2.id)
GROUP BY order_no,prod_spec_name) chk on chk.order_no = t1.order_no 
	and chk.PROD_SPEC_name = t1.MATER_SPEC_name2
  LEFT JOIN
(SELECT t.order_no,t.prod_spec_id mater_spec_id,floor(sum(t.quantity)/min(m.num_per_wad))  AS amount 
from qinsen.inst_caidiemo t
LEFT JOIN qinsen.PARA_MATER_SPEC m ON m.mater_spec_id = t.prod_spec_id
GROUP BY t.order_no,t.prod_spec_id) t2 ON t1.order_no=t2.order_no AND t1.mater_spec_id=t2.mater_spec_id
LEFT JOIN
(SELECT t.order_no,t.prod_spec_id mater_spec_id, COUNT(1) amount from qinsen.inst_juanmo_main t
GROUP BY t.order_no,t.prod_spec_id) t3 ON t3.order_no = t1.order_no AND t1.mater_spec_id=t3.mater_spec_id
LEFT JOIN

      
(SELECT t.order_no,t.prod_spec_id mater_spec_id, COUNT(1) amount，
SUM(DECODE(t.judge_flag,'Y',1,0)) qualified_amount,  

<!--贴本订单的标签数量（暂时）-->
<!--气检合格的元件贴标数+工艺员给出“A、放行原订单”的贴标数（或工艺员意见当中有“主行”字眼的记录）-湿膜数量（湿膜订单不用减）-->

<!--有元件号的-->
SUM(CASE WHEN t.batch_no IS NOT NULL THEN 1 ELSE 0 END) label_amount,
<!--放行数量-->
sum(decode(t.gyy_conclusion,'A',1,0)) release_amount

 from qinsen.inst_qijian t
GROUP BY t.order_no,t.prod_spec_id) t4 ON t4.order_no = t1.order_no AND t1.mater_spec_id=t4.mater_spec_id
LEFT JOIN
<!--绕丝生产数量（支）-->
<!--只显示“贴本订单的标签数量”的元件绕丝数量，其他不能算在本订单的绕丝数量-->
<!--气检合格或者工艺员给出“A、放行原订单”-->
(SELECT t2.order_no,t2.prod_spec_id mater_spec_id, COUNT(1) amount  from  QINSEN.INST_RAOSI t
 LEFT JOIN qinsen.inst_qijian t2 
ON t.batch_no=t2.batch_no
where (t2.gyy_conclusion='A' or t2.judge_flag='Y')
GROUP BY t2.order_no,t2.prod_spec_id) t5 ON t5.order_no = t1.order_no AND t1.mater_spec_id=t5.mater_spec_id

left join 
<!--湿膜数量-->
(SELECT COUNT(1) amount,ttt.order_no,ttt.prod_spec_id
FROM (select t.* from QINSEN.INST_QIJIAN t
WHERE exists(SELECT 1 FROM qinsen.INST_WATER_TEST tt WHERE tt.juanmo_batch_id = t.juanmo_batch_id)
) ttt
GROUP BY ttt.order_no,ttt.prod_spec_id ) t6 ON t6.order_no = t1.order_no AND t1.mater_spec_id=t6.prod_spec_id


	where 1=1
	<isNotNull prepend="and" property="orderNo"> 
		       T1.ORDER_NO = #orderNo#
	</isNotNull>
	 <isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
	<isNotNull prepend="and" property="id"> 
		       T1.ID = #id#
	</isNotNull>
	<isNotNull prepend="and" property="materSpecName"> 
		       upper(t1.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName2"> 
		       upper(t1.MATER_SPEC_NAME) = upper(#materSpecName2#) 
	</isNotNull>
	
	 <isNotNull prepend = "and"  property = "orderDateStart"> 
          to_char(t1.order_Date,'yyyy-MM-dd')  &gt;=  #orderDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "orderDateEnd"> 
          to_char(t1.order_Date,'yyyy-MM-dd')  &lt;=  #orderDateEnd#
     </isNotNull>
     
     <isNotNull prepend="and" property="materSpecId">
     T1.MATER_SPEC_ID
     </isNotNull>
     
     <isNotNull prepend = "and"  property = "demandStockDateStart"> 
          to_char(T1.DEMAND_STOCK_DATE,'yyyy-MM-dd')  &gt;=  #demandStockDateStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "demandStockDateEnd"> 
          to_char(T1.DEMAND_STOCK_DATE,'yyyy-MM-dd')  &lt;=  #demandStockDateEnd#
     </isNotNull>
     <!--当贴本订单标签数量 < 订单数量时，且0≤入库日期-当前日期  ≤2  -->
     <isNotNull prepend = "and"  property = "warn"> 
      round(100 * nvl(chk.apply_amount,0)/nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0) &lt; 100
     <isEqual prepend="and" property="warn" compareValue="风险警报">
	round(t1.demand_stock_date-SYSDATE,2) > 0 
	and round(t1.demand_stock_date-SYSDATE,2) &lt;= 2
	and (nvl(t4.release_amount,0) + nvl(t4.qualified_amount,0)) &lt; nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0) 
	</isEqual>
	
	<isEqual prepend="and" property="warn" compareValue="逾期警报">
	round(SYSDATE - t1.demand_stock_date,2) >= 1
	</isEqual>
	</isNotNull>
	
	<isNotNull prepend="and" property="orderNo2"> 
		       T1.ORDER_NO like '%' || #orderNo2# || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="applyState"> 
	case when nvl(chk.apply_amount,0) >= nvl(nvl(t1.PROD_AMOUNT,T1.ORDER_AMOUNT),0) then '完成'
        when nvl(t2.amount,0)=0 then '未投料'
        else '进行中' end = #applyState#
       </isNotNull> 
     order by t1.id desc
	 </select>
	 
	 <select id="queryRework" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
	 
	 SELECT T1.ID               AS "id",
       TO_CHAR(T1.CREATE_TIME, 'yyyy-MM-dd') "createTime",
       T1.CREATE_USER_ID AS "createUserId",
       T1.CREATE_NAME AS "createName",
       TO_CHAR(T1.UPDATE_TIME, 'yyyy-MM-dd') "updateTime",
       T1.UPDATE_USER_ID   AS "updateUserId",
       T1.UPDATE_NAME      AS "updateName",
       T1.RESERVE1         AS "reserve1",
       T1.RESERVE2         AS "reserve2",
       T1.RESERVE3         AS "reserve3",
       T1.RESERVE4         AS "reserve4",
       T1.RESERVE5         AS "reserve5",
       T1.ORG_ID           AS "orgId",
       T1.STATUS           AS "status",
       T1.CODE             AS "code",
       T1.HAPPEN_DATE      AS "happenDate",
       T1.TACHE            AS "tache",
       T1.DESCRIBE         AS "describe",
       T1.ORDER_NO         AS "orderNo",
       T1.PROD_SPEC_ID     AS "prodSpecId",
       T1.DEFECT_TYPE      AS "defectType",
       T1.DEFECT_AMOUNT    AS "defectAmount",
       T1.BATCH_NO_STR     AS "batchNoStr",
       T1.FIRST_ID         AS "firstId",
       T1.FIRST_NAME       AS "firstName",
       T1.REWORK_METHOD    AS "reworkMethod",
       T1.REWORK_DEAL      AS "reworkDeal",
       T1.SECOND_ID        AS "secondId",
       T1.SECOND_NAME      AS "secondName",
       TO_CHAR(T1.SECOND_TIME, 'YYYY-MM-DD HH24:MI:SS')      AS "secondTime",
           T1.REWORK_RESPONSE  AS "reworkResponse",
       T1.REWORK_INCENTIVE AS "reworkIncentive",
       T1.PLAN_FINISH_DATE AS "planFinishDate",
       T1.REWORK_ORDER_NO  AS "reworkOrderNo",
       T1.THIRD_ID         AS "thirdId",
       T1.THIRD_NAME       AS "thirdName",
       TO_CHAR(T1.THIRD_TIME, 'YYYY-MM-DD HH24:MI:SS')        AS "thirdTime",
       T1.IF_ONTIME        AS "ifOntime",
       T1.NOT_ONTIME       AS "notOntime",
       T1.IF_OK            AS "ifOk",
       T1.FOURTH_ID        AS "fourthId",
       T1.FOURTH_NAME      AS "fourthName",
       TO_CHAR(T1.FOURTH_TIME, 'YYYY-MM-DD HH24:MI:SS')       AS "fourthTime",
       T2.MATER_SPEC_NAME  AS "materSpecName",
       T1.STEP      AS "step",
       decode(T1.STEP,'second','返工指令','third','返工安排','fourth','结果确认','完结') "stepName"
  FROM KS_COMPONENT_REWORK T1
  LEFT JOIN QINSEN.PARA_MATER_SPEC T2
    ON T1.PROD_SPEC_ID = T2.MATER_SPEC_ID
    where 1=1
    <isNotNull prepend="and" property="step"> 
		       T1.step = #step# 
	</isNotNull>
	<isNotNull prepend="and" property="orderNo"> 
		       T1.ORDER_NO like '%' || #orderNo# || '%'
	</isNotNull>
	<isNotNull prepend="and" property="code"> 
		       T1.code like '%' || #code# || '%'
	</isNotNull>
	 <isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
	<isNotNull prepend="and" property="id"> 
		       T1.ID = #id#
	</isNotNull>
	<isNotNull prepend="and" property="materSpecName"> 
		       upper(t2.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	order by t1.id desc
	 </select>
	 
	   <select id="queryReworkCode" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
       SELECT CODE "code" from 
  (SELECT to_char(SYSDATE,'yyyyMMdd')|| '001' CODE FROM dual
  WHERE NOT EXISTS(
  select t.code from KS_COMPONENT_REWORK t
  WHERE SUBSTR(t.code,1,8) = to_char(SYSDATE,'yyyyMMdd'))
  UNION
  select to_char(to_number(max(t.code))+1) CODE from KS_COMPONENT_REWORK t
  WHERE SUBSTR(t.code,1,8) = to_char(SYSDATE,'yyyyMMdd'))
  WHERE CODE IS NOT NULL
     
    </select> 
    
    <select id="queryBatchNo" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    SELECT t.order_no "orderNo",t.batch_no "batchNo" ,t.produce_dt "produceDt",
    t2.mater_spec_id "materSpecId",t2.mater_spec_name "materSpecName"
 	FROM qinsen.inst_qijian t
	LEFT JOIN qinsen.para_mater_spec t2 ON t2.mater_spec_id = t.prod_spec_id
    
    where 1=1
    and t.batch_no is not null
    <isNotNull prepend="and" property="orderNo"> 
		       T.ORDER_NO = #orderNo# 
	</isNotNull>
	<isNotNull prepend="and" property="orderNo2"> 
		       T.ORDER_NO like '%' || #orderNo2# || '%'
	</isNotNull>
    <isNotNull prepend="and" property="materSpecName"> 
		       upper(t2.MATER_SPEC_NAME) like '%' || upper(#materSpecName#) || '%'
	</isNotNull>
	order by T.ORDER_NO,t2.mater_spec_id
    </select> 
        
     <select id="queryPlanStock" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   	    select t1.length "length",
    t1.BATCH_NO as "tumoBatchNo",
    t5.prod_spec_id as "prodSpecId",
     t1.storage_name "storageName",
    t1.storage_position "storagePosition"
    from KS_COMPONENT_PLAN_STOCK t1  
    left join (select t.tumo_batch_no,t.tumo_batch_id,t.test_avg_gpd,t.salt_rejection,t.prod_spec_id,m.mater_spec_name, 
  t.test_Mater_Spec,t.test_batch_no,t.test_gpd,t.test_salt_Rejection2,t.storage_name,t.storage_position
  from KS_COMPONENT_TUMO_SELECT t
	LEFT JOIN QINSEN.PARA_MATER_SPEC m ON m.mater_spec_id = t.prod_spec_id
	WHERE t.flag='合格') t5
    on t5.tumo_batch_no = t1.batch_No     
    where t1.deleted = 'N'
		<isNotNull prepend="and" property="prodSpecId"> 
		       t5.PROD_SPEC_ID = #prodSpecId#
	    </isNotNull>
	    
		order by t1.BATCH_NO
    </select>
    
     <!--订单下达对应生产型号-->
    <select id="queryOrderMaterSpec" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
   SELECT T1.MATER_SPEC_NAME  AS "materSpecName",
       T1.MATER_SPEC_NAME2 AS "materSpecName2",
       T1.MATER_SPEC_ID    AS "materSpecId",
       pms.num_per_wad "numPerWad",
       pms.blanking_size "blankingSize",
       pms.page_width "pageWidth",
       pms.num_per_wad*pms.blanking_size*pms.page_width "mpSize"
  FROM KS_COMPONENT_MATER_RELATION T1
  LEFT JOIN qinsen.para_mater_spec pms 
  ON t1.mater_spec_id = pms.mater_spec_id
  where 1=1
   <isNotNull prepend="and" property="materSpecName2"> 
		       T1.MATER_SPEC_NAME2 like '%' || #materSpecName2# || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName"> 
		       T1.MATER_SPEC_NAME like '%' || #materSpecName# || '%'
	</isNotNull>
	
	<isNotNull prepend="and" property="materSpecName22"> 
		       T1.MATER_SPEC_NAME2 = #materSpecName22# 
	</isNotNull>
	
	order by T1.MATER_SPEC_NAME2,T1.MATER_SPEC_NAME
   </select>
   
   <insert id="insertOrderMaterSpec" parameterClass="java.util.HashMap" >
   insert into KS_COMPONENT_MATER_RELATION
   (MATER_SPEC_NAME,MATER_SPEC_NAME2,MATER_SPEC_ID)
   select mater_Spec_Name,#materSpecName2#,#materSpecId# 
   from qinsen.para_mater_spec where mater_spec_id = #materSpecId#
   and not exists(select 1 from KS_COMPONENT_MATER_RELATION
   where MATER_SPEC_NAME2 = #materSpecName2# and mater_spec_id = #materSpecId#
   )
   </insert>
   
   <delete id="deleteOrderMaterSpec" parameterClass="java.util.HashMap" >
   delete from KS_COMPONENT_MATER_RELATION 
   where MATER_SPEC_NAME2 = #materSpecName2# and mater_spec_id = #materSpecId#
   </delete>
   
   <update id="updatePlanDayJmAmount" parameterClass="java.util.HashMap" >
   update KS_COMPONENT_PLAN_DAY t set t.jm_amount = #amount#
	WHERE (t.order_id,to_char(t.plan_date,'yyyy-MM-dd'))
	IN (select t.order_id,to_char(t.plan_date,'yyyy-MM-dd') from KS_COMPONENT_PLAN_WEEK_DAYS t
	WHERE t.id = #id#)
	</update>
	
	 <delete id="deleteSnQuery" parameterClass="java.util.HashMap" >
   delete from KS_COMPONENT_DUTY_SN_QUERY 
   </delete>
   
   <insert id="insertSnQuery" parameterClass="java.util.HashMap" >
   INSERT INTO KS_COMPONENT_DUTY_SN_QUERY
	(ORDER_ID,ORDER_NO,PROD_SPEC_NAME,PREFIX,SN_START,SN_END,PROD_SPEC_ID)
	SELECT ORDER_ID,ORDER_NO,PROD_SPEC_NAME,PREFIX,SN_START,SN_END,PROD_SPEC_ID
	FROM V_KS_COMPONENT_DUTY_SN
   </insert>
</sqlMap>