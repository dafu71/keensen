<?xml version="1.0" encoding="UTF-8"?>
<!-- author:dafu -->
<sqlMap>
   <select id="queryFix" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    select 
    t1.ID as "id",t1.mptype "mptype",t1.machine "machine",t1.psf "psf",	t1.weight "weight", 
    t2.dictname "psfName",
	to_char(t1.CREATE_TIME,'yyyy-MM-dd hh24:mi')as "createTime",
	t1.CREATE_USER_ID as "createUserId",
	t1.CREATE_NAME as "createName",
	to_char(t1.UPDATE_TIME,'yyyy-MM-dd hh24:mi')as "updateTime",
	t1.UPDATE_USER_ID as "updateUserId",
	t1.UPDATE_NAME as "updateName",
	t1.RESERVE1 as "reserve1",
	t1.RESERVE2 as "reserve2",
	t1.RESERVE3 as "reserve3",
	t1.RESERVE4 as "reserve4",
	t1.RESERVE5 as "reserve5",
	t1.ORG_ID as "orgId",
	t1.STATUS as "status",
	t1.BATCH_NO as "batchNo",
	t1.C11 as "c11",
	t1.C12 as "c12",
	t1.C13 as "c13",
	t1.C14 as "c14",t1.concentration "concentration",
	to_char(t1.FIX_STARTTIME,'yyyy-MM-dd hh24:mi') as "fixStarttime",
	to_char(t1.HOTTIME,'yyyy-MM-dd hh24:mi') as "hottime",
	to_char(t1.REACHTIME,'yyyy-MM-dd hh24:mi') as "reachtime",
	t1.KEEP_DURATION as "keepDuration",
	t1.FIX_USERID as "fixUserid",
	to_char(t1.HIT_STARTTIME,'yyyy-MM-dd hh24:mi') as "hitStarttime",
	to_char(t1.HIT_OVERTIME,'yyyy-MM-dd hh24:mi') as "hitOvertime",
	to_char(t1.LOOP_STARTTIME,'yyyy-MM-dd hh24:mi') as "loopStarttime",
	to_char(t1.LOOP_OVERTIME,'yyyy-MM-dd hh24:mi') as "loopOvertime",
	t1.JAR_NO as "jarNo",
	t1.JAR_VACUUM as "jarVacuum",
	t1.VACUUM_DURATION as "vacuumDuration",
	to_char(t1.USETIME,'yyyy-MM-dd hh24:mi') as "usetime",
	t1.HIT_USERID as "hitUserid",
	t1.REMARK as "remark",
	t1.FIX_USERNAME as "fixUsername",
	t1.HIT_USERNAME as "hitUsername"，
	CEIL((TO_DATE(TO_CHAR(SYSDATE, 'yyyy-mm-dd hh24-mi-ss'), 'yyyy-mm-dd hh24-mi-ss') -
            TO_DATE(TO_CHAR(t1.create_time, 'yyyy-mm-dd hh24-mi-ss'), 'yyyy-mm-dd hh24-mi-ss')) * 24) "diff"
	,nvl(t1.used,nvl2(zmx.zmy_batch_no,'是','否')) "used"
	, test.cps "cps"
	from KS_PROD_DIAPHRAGM_MAKE_FIX t1
	left join EOS_DICT_ENTRY t2 on t2.dictid=t1.psf and t2.dicttypeid='KS_PSF'
    left join (select distinct t.zmy_batch_no from KS_PROD_DIAPHRAGM_ZMX_RECORD t) zmx 
    on zmx.zmy_batch_no = t1.BATCH_NO
    
    left join (SELECT t.relation_id,t.cps,h.batch_no from KS_QUALITY_MP_TEST_ZMY_LIST t
	LEFT JOIN KS_QUALITY_MP_TEST_ZMY_head h
	ON h.id = t.relation_id
	WHERE t.id IN(
	select MAX(ID) list_id from KS_QUALITY_MP_TEST_ZMY_LIST t
	WHERE t.cps IS NOT NULL
	GROUP BY t.relation_id)) test
	on test.batch_no = t1.BATCH_NO
    
    
     where 1=1
     <isNotNull prepend="" property="batchNo"> 
		       AND t1.BATCH_NO = #batchNo#
	</isNotNull>
	<isNotNull prepend="" property="batchNo2"> 
		       AND t1.BATCH_NO like '%' || #batchNo2# || '%'
	</isNotNull>
	<isNotNull prepend="" property="fixUsername"> 
		       AND t1.FIX_USERNAME LIKE '%' || #fixUsername# || '%'
	</isNotNull>
	<isNotNull prepend="" property="hitUsername"> 
		       AND t1.HIT_USERNAME LIKE '%' || #hitUsername# || '%'
	</isNotNull>
	<isNotNull prepend="" property="id"> 
		       AND t1.ID = #id#
	</isNotNull>
	<isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
     
      <isNotNull prepend="" property="machine"> 
		       AND t1.machine = #machine#
	</isNotNull>
     
      <isNotNull prepend="" property="used"> 
		       AND nvl(t1.used,nvl2(zmx.zmy_batch_no,'是','否')) = #used#
	</isNotNull>
	 ORDER BY t1.CREATE_TIME desc
     </select>
     
     <select id="queryZmx" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
     SELECT T1.ID AS "id", T1.abnormal "abnormal",T1.pump_Speed "pumpSpeed",
       to_char(t1.CREATE_TIME,'yyyy-MM-dd hh24:mi')as "createTime",
		t1.CREATE_USER_ID as "createUserId",
		t1.CREATE_NAME as "createName",
		to_char(t1.UPDATE_TIME,'yyyy-MM-dd hh24:mi')as "updateTime",
       T1.UPDATE_USER_ID AS "updateUserId",
       T1.UPDATE_NAME AS "updateName",
       T1.RESERVE1 AS "reserve1",
       T1.RESERVE2 AS "reserve2",
       T1.RESERVE3 AS "reserve3",
       T1.RESERVE4 AS "reserve4",
       T1.RESERVE5 AS "reserve5",
       T1.ORG_ID AS "orgId",
       T1.STATUS AS "status",
       T1.DIMO_TYPE AS "dimoType",T1.PRODUCT_TYPE AS "productType",
       T1.LINE AS "line",
       T1.PRODUCT_DT AS "productDt",
       T1.DIMO_BATCH_NO AS "dimoBatchNo",
       t2.prop_value_name AS "supName",
       T1.SUP_ID AS "supId",
       T1.WF_BATCH_NO AS "wfBatchNo",
       T1.ZMY_BATCH_NO AS "zmyBatchNo",
       T1.THEORY_AMOUNT AS "theoryAmount",
       T1.LOSE0 AS "lose0",
       T1.LOSE1 AS "lose1",
       T1.LOSE2 AS "lose2",
       T1.LOSE3 AS "lose3",
       T1.LOSE4 AS "lose4",
       T1.LOSE5 AS "lose5",
       T1.LOSE6 AS "lose6",
       T1.LOSE7 AS "lose7",
       <!--NVL(T1.THEORY_AMOUNT, 0) - nvl(defect.loss,0) - 
       (NVL(T1.LOSE0, 0) + NVL(T1.LOSE1, 0) + NVL(T1.LOSE2, 0) +
        NVL(T1.LOSE3, 0) + NVL(T1.LOSE4, 0) + NVL(T1.LOSE5, 0) +
        NVL(T1.LOSE6, 0) + NVL(T1.LOSE7, 0)) "dimoAmount",-->
        NVL(T1.THEORY_AMOUNT, 0) - nvl(defect2.loss,0) "dimoAmount",
        NVL(T1.THEORY_AMOUNT, 0) - nvl(defect.loss,0) "dimoAmountQualified",
       T1.FLAW0 AS "flaw0",
       T1.FLAW1 AS "flaw1",
       T1.FLAW2 AS "flaw2",
       T1.TEAM_ID AS "teamId",
       t3.dept_name AS "teamName",
       T1.BEFORE_AMOUNT AS "beforeAmount",
       T1.CUR_AMOUNT AS "curAmount",
       NVL(T1.BEFORE_AMOUNT, 0) + NVL(T1.CUR_AMOUNT, 0) "totalAmount",
       t4.cnt "cnt",
       defect.loss "loss",
       fx.mptype "zmcode",
       t1.RELEASE_AMOUNT "releaseAmount",
       round((nvl(bm.MATER2,0)+nvl(bm.MATER3,0)+ nvl(bm.MATER4,0)+nvl(bm.MATER5,0))/1000 * (NVL(T1.THEORY_AMOUNT, 0)),2) "usedWeight"
  FROM KS_PROD_DIAPHRAGM_ZMX_RECORD T1
 
  
  left join (select t.batch_no,t.mptype from KS_PROD_DIAPHRAGM_MAKE_FIX t) fx
  on fx.batch_no = REGEXP_SUBSTR(replace(replace(T1.ZMY_BATCH_NO,' ',','),'，',','), '[^,]+', 1, 1)
  
  left join (SELECT 
       MIN(T1.MATER2) MATER2,
       MIN(T1.MATER3) MATER3,
       MIN(T1.MATER4) MATER4,
       MIN(T1.MATER5) MATER5,
       T2.DMCODE,
       T2.ZMCODE
  FROM KS_BASE_MP_BOM T1
   LEFT JOIN KS_BASE_ZM_DM_TM T2
    ON T1.MPTYPE = T2.MPTYPE
 GROUP BY T2.DMCODE, T2.ZMCODE) bm
  on T1.DIMO_TYPE = bm.DMCODE and fx.mptype = bm.ZMCODE
  
  left join (select sum(t.loss) loss ,t.dm_batch_id from QINSEN.Inst_Cdm_Defect2 t
	GROUP BY t.dm_batch_id) defect on defect.dm_batch_id = t1.id
	
left join (select sum(t.loss) loss ,t.dm_batch_id from QINSEN.Inst_Cdm_Defect2 t
where nvl(if_tear,'是') = '是'
	GROUP BY t.dm_batch_id) defect2 on defect2.dm_batch_id = t1.id	
  left join qinsen.CONF_PROP_VALUE_OPTION t2
 	on t2.prop_id = 30021 and t2.prop_value_id = t1.SUP_ID
  left join qinsen.BASE_DEPARTMENT t3
	on t3.dept_type_id='110' and t3.dept_id = T1.TEAM_ID
  left join (select count(1) cnt ,DIMO_BATCH_NO from KS_PROD_DIAPHRAGM_ZMX_RECORD
      group by DIMO_BATCH_NO) t4 on t4.DIMO_BATCH_NO=t1.DIMO_BATCH_NO
     where 1=1
     <isNotNull prepend="" property="id"> 
		       AND t1.id = #id#
	</isNotNull>
     <isNotNull prepend="" property="dimoType"> 
		       AND t1.dimo_Type = #dimoType#
	</isNotNull>
	<isNotNull prepend="" property="teamId"> 
		       AND T1.TEAM_ID = #teamId#
	</isNotNull>
	<isNotNull prepend="" property="line"> 
		       AND T1.LINE = #line#
	</isNotNull>
	<isNotNull prepend="" property="productType"> 
		       AND T1.product_Type = #productType#
	</isNotNull>
	
	
	<isNotNull prepend = "and"  property = "productDtStart"> 
          to_char(T1.PRODUCT_DT,'yyyy-MM-dd')  &gt;=  #productDtStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "productDtEnd"> 
          to_char(T1.PRODUCT_DT,'yyyy-MM-dd')  &lt;=  #productDtEnd#
     </isNotNull>
      <isNotNull prepend="" property="dimoBatchNo"> 
		       AND T1.DIMO_BATCH_NO = #dimoBatchNo#
	</isNotNull>
	<isNotNull prepend="" property="dimoBatchNo2"> 
		       AND T1.DIMO_BATCH_NO like '%' || #dimoBatchNo2# || '%'
	</isNotNull>
	<isNotNull prepend="and" property="supId"> 
		       t1.SUP_ID = #supId#
	</isNotNull>
	<isNotNull prepend="" property="zmyBatchNo2"> 
		       AND T1.ZMY_BATCH_NO like '%' || #zmyBatchNo2# || '%'
	</isNotNull>
	<isNotNull prepend="" property="wfBatchNo2"> 
		       AND T1.WF_BATCH_NO like '%' || #wfBatchNo2# || '%'
	</isNotNull><isNotNull prepend="" property="createName"> 
		       AND t1.CREATE_NAME like '%' || #createName# || '%'
	</isNotNull>
	ORDER BY t1.CREATE_TIME desc
     </select>
     
     <select id="queryStock" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
	     SELECT T1.DIMO_BATCH_NO AS "dimoBatchNo",
       T1.PRODUCT_DT AS "productDt",
       T1.LINE AS "line",T3.base "base",t3.id "id",
       T1.DIMO_TYPE AS "dimoType",
       T1.THEORY_AMOUNT AS "theoryAmount",
       nvl(T5.LOSE,0) AS "lose",
       T1.THEORY_AMOUNT - nvl(T5.LOSE,0) "dimoAmount",
       T2.PROD_LENGTH "prodLength",
       T1.THEORY_AMOUNT - nvl(T5.LOSE,0) - nvl(T2.PROD_LENGTH,0) "residue",
       t3.sup_name "supName",nvl(t3.pump_speed,'无') "pumpSpeed"
       FROM (SELECT T.DIMO_BATCH_NO,
               '202' || SUBSTR(T.DIMO_BATCH_NO, 6, 1) Y,
               
               DECODE(SUBSTR(T.DIMO_BATCH_NO, 7, 1),
                      'A',
                      '10',
                      'B',
                      '11',
                      'C',
                      '12',
                      '0' || SUBSTR(T.DIMO_BATCH_NO, 7, 1)) M,
               SUBSTR(T.DIMO_BATCH_NO, 8, 2) D,
               '202' || SUBSTR(T.DIMO_BATCH_NO, 6, 1) || '-' ||
               DECODE(SUBSTR(T.DIMO_BATCH_NO, 7, 1),
                      'A',
                      '10',
                      'B',
                      '11',
                      'C',
                      '12',
                      '0' || SUBSTR(T.DIMO_BATCH_NO, 7, 1)) || '-' ||
               SUBSTR(T.DIMO_BATCH_NO, 8, 2) PRODUCT_DT,
               MAX(T.LINE) LINE,
               MAX(T.DIMO_TYPE) DIMO_TYPE,
               MAX(T.THEORY_AMOUNT) THEORY_AMOUNT,
               SUM(NVL(T.LOSE0, 0)) + SUM(NVL(T.LOSE1, 0)) +
               SUM(NVL(T.LOSE2, 0)) + SUM(NVL(T.LOSE3, 0)) +
               SUM(NVL(T.LOSE4, 0)) + SUM(NVL(T.LOSE5, 0)) +
               SUM(NVL(T.LOSE6, 0)) + SUM(NVL(T.LOSE7, 0)) LOSE
          FROM KS_PROD_DIAPHRAGM_ZMX_RECORD T
         GROUP BY T.DIMO_BATCH_NO) T1
         
  left join (SELECT SUM(LOSS) LOSE, DIMO_BATCH_NO
  FROM (SELECT ZM.DIMO_BATCH_NO,
               T.DM_BATCH_ID,
               T.DEFECT_ITEM_ID,
               T.IF_TEAR,
               T.LOSS
          FROM QINSEN.INST_CDM_DEFECT2 T
          LEFT JOIN KS_PROD_DIAPHRAGM_ZMX_RECORD ZM
            ON T.DM_BATCH_ID = ZM.ID
        )
 GROUP BY DIMO_BATCH_NO)  t5
 on t5.DIMO_BATCH_NO =  T1.DIMO_BATCH_NO    
         
  LEFT JOIN (SELECT T.DIMO_BATCH_NO, SUM(T.OUT_LENGTH) PROD_LENGTH
               FROM V_KS_TUMO_ALL T
              GROUP BY T.DIMO_BATCH_NO) T2
    ON T1.DIMO_BATCH_NO = T2.DIMO_BATCH_NO
     LEFT JOIN (select t.id,t.base,t.dimo_batch_no,t.sup_id,t2.prop_value_name sup_name,t.pump_speed from KS_PROD_DIAPHRAGM_ZMX_RECORD t
LEFT JOIN qinsen.CONF_PROP_VALUE_OPTION t2
 	on t2.prop_id = 30021 and t2.prop_value_id = t.SUP_ID) t3 ON t3.dimo_batch_no=t1.DIMO_BATCH_NO
 WHERE 1 = 1
  <isNotNull prepend="" property="base"> 
		       AND t3.base = #base#
	</isNotNull>
     <isNotNull prepend="" property="dimoType"> 
		       AND t1.dimo_Type = #dimoType#
	</isNotNull>
	<isNotNull prepend="" property="line"> 
		       AND T1.LINE = #line#
	</isNotNull>
	<isNotNull prepend = "and"  property = "productDtStart"> 
          T1.PRODUCT_DT &gt;=  #productDtStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "productDtEnd"> 
          T1.PRODUCT_DT &lt;=   #productDtEnd#
     </isNotNull>
      <isNotNull prepend="" property="dimoBatchNo"> 
		       AND T1.DIMO_BATCH_NO = #dimoBatchNo#
	</isNotNull>
	<isNotNull prepend="" property="dimoBatchNo2"> 
		       AND T1.DIMO_BATCH_NO like '%' || #dimoBatchNo2# || '%'
	</isNotNull>
	
	<isEqual prepend="" property="notLessthan100" compareValue="Y"> 
		       AND T1.THEORY_AMOUNT - T1.LOSE - nvl(T2.PROD_LENGTH,0)>100
	</isEqual>
	
     order by t1.y desc,t1.m DESC,t1.d DESC
     </select>
     
     
      <select id="queryStock4View" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
	     SELECT T1.DIMO_BATCH_NO AS "dimoBatchNo",ceil（sysdate-to_date(T1.PRODUCT_DT,'yyyy-MM-dd')） "diff",
       T1.PRODUCT_DT AS "productDt",
       T1.LINE AS "line",T3.base "base",
       T1.DIMO_TYPE AS "dimoType",
       T1.THEORY_AMOUNT AS "theoryAmount",
       T1.LOSE AS "lose",
       T1.THEORY_AMOUNT - T1.LOSE "dimoAmount",
       T2.PROD_LENGTH "prodLength",
       T1.THEORY_AMOUNT - T1.LOSE - nvl(T2.PROD_LENGTH,0) "residue",t3.sup_name "supName",nvl(t3.pump_speed,'无') "pumpSpeed"
  FROM (SELECT T.DIMO_BATCH_NO,
               '202' || SUBSTR(T.DIMO_BATCH_NO, 6, 1) Y,
               DECODE(SUBSTR(T.DIMO_BATCH_NO, 7, 1),
                      'A',
                      10,
                      'B',
                      11,
                      'C',
                      12,
                      SUBSTR(T.DIMO_BATCH_NO, 7, 1)) M,
               SUBSTR(T.DIMO_BATCH_NO, 8, 2) D,
               '202' || SUBSTR(T.DIMO_BATCH_NO, 6, 1) || '-' ||
               DECODE(SUBSTR(T.DIMO_BATCH_NO, 7, 1),
                      'A',
                      10,
                      'B',
                      11,
                      'C',
                      12,
                      SUBSTR(T.DIMO_BATCH_NO, 7, 1)) || '-' ||
               SUBSTR(T.DIMO_BATCH_NO, 8, 2) PRODUCT_DT,
               MAX(T.LINE) LINE,
               MAX(T.DIMO_TYPE) DIMO_TYPE,
               MAX(T.THEORY_AMOUNT) THEORY_AMOUNT,
               SUM(NVL(T.LOSE0, 0)) + SUM(NVL(T.LOSE1, 0)) +
               SUM(NVL(T.LOSE2, 0)) + SUM(NVL(T.LOSE3, 0)) +
               SUM(NVL(T.LOSE4, 0)) + SUM(NVL(T.LOSE5, 0)) +
               SUM(NVL(T.LOSE6, 0)) + SUM(NVL(T.LOSE7, 0)) LOSE
          FROM KS_PROD_DIAPHRAGM_ZMX_RECORD T
         GROUP BY T.DIMO_BATCH_NO) T1
  LEFT JOIN (SELECT T.DIMO_BATCH_NO, SUM(T.OUT_LENGTH) PROD_LENGTH
               FROM V_KS_TUMO_ALL T
              GROUP BY T.DIMO_BATCH_NO) T2
    ON T1.DIMO_BATCH_NO = T2.DIMO_BATCH_NO
    LEFT JOIN (select t.base,t.dimo_batch_no,t.sup_id,t2.prop_value_name sup_name,t.pump_speed from KS_PROD_DIAPHRAGM_ZMX_RECORD t
LEFT JOIN qinsen.CONF_PROP_VALUE_OPTION t2
 	on t2.prop_id = 30021 and t2.prop_value_id = t.SUP_ID) t3 ON t3.dimo_batch_no=t1.DIMO_BATCH_NO
 WHERE 1 = 1
 AND 
 T1.THEORY_AMOUNT - T1.LOSE - nvl(T2.PROD_LENGTH,0)>#num#
 
  <isNotNull prepend="" property="line"> 
		       AND T1.LINE = #line#
	</isNotNull>
	 <isNotNull prepend="" property="base"> 
		       AND t3.base = #base#
	</isNotNull>
 ORDER BY T1.LINE,T1.THEORY_AMOUNT - T1.LOSE - nvl(T2.PROD_LENGTH,0) desc
     
     </select>
     
      <select id="countFix" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
    select 
   nvl(sum(t1.C11),0) as "c11",
	nvl(sum(t1.C12),0) as "c12",
	nvl(sum(t1.C13),0) as "c13",
	nvl(sum(t1.C14),0) as "c14",
	nvl(sum(t1.C11) + sum(t1.C12) + sum(t1.C13) + sum(t1.C14),0) "total"
	from KS_PROD_DIAPHRAGM_MAKE_FIX t1
	left join EOS_DICT_ENTRY t2 on t2.dictid=t1.psf and t2.dicttypeid='KS_PSF'
    left join (select distinct t.zmy_batch_no from KS_PROD_DIAPHRAGM_ZMX_RECORD t) zmx 
    on zmx.zmy_batch_no = t1.BATCH_NO
     where 1=1
     <isNotNull prepend="" property="batchNo"> 
		       AND t1.BATCH_NO = #batchNo#
	</isNotNull>
	<isNotNull prepend="" property="batchNo2"> 
		       AND t1.BATCH_NO like '%' || #batchNo2# || '%'
	</isNotNull>
	<isNotNull prepend="" property="fixUsername"> 
		       AND t1.FIX_USERNAME LIKE '%' || #fixUsername# || '%'
	</isNotNull>
	<isNotNull prepend="" property="hitUsername"> 
		       AND t1.HIT_USERNAME LIKE '%' || #hitUsername# || '%'
	</isNotNull>
	<isNotNull prepend="" property="id"> 
		       AND t1.ID = #id#
	</isNotNull>
	<isNotNull prepend = "and"  property = "createTimeStart"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &gt;=  #createTimeStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "createTimeEnd"> 
          to_char(t1.CREATE_TIME,'yyyy-MM-dd')  &lt;=  #createTimeEnd#
     </isNotNull>
     
      <isNotNull prepend="" property="machine"> 
		       AND t1.machine = #machine#
	</isNotNull>
     
      <isNotNull prepend="" property="used"> 
		       AND nvl(t1.used,nvl2(zmx.zmy_batch_no,'是','否')) = #used#
	</isNotNull>
	 ORDER BY t1.CREATE_TIME desc
     </select>
     
      <select id="countZmx" resultClass="commonj.sdo.DataObject" parameterClass="java.util.HashMap" >
     SELECT 
       nvl(sum(T1.THEORY_AMOUNT),0) AS "theoryAmount",
     
       nvl(sum(defect.loss),0) "loss"
  FROM KS_PROD_DIAPHRAGM_ZMX_RECORD T1
  left join (select sum(t.loss) loss ,t.dm_batch_id from QINSEN.Inst_Cdm_Defect2 t
	GROUP BY t.dm_batch_id) defect on defect.dm_batch_id = t1.id
	
left join (select sum(t.loss) loss ,t.dm_batch_id from QINSEN.Inst_Cdm_Defect2 t
where nvl(if_tear,'是') = '是'
	GROUP BY t.dm_batch_id) defect2 on defect2.dm_batch_id = t1.id	
  left join qinsen.CONF_PROP_VALUE_OPTION t2
 	on t2.prop_id = 30021 and t2.prop_value_id = t1.SUP_ID
  left join qinsen.BASE_DEPARTMENT t3
	on t3.dept_type_id='110' and t3.dept_id = T1.TEAM_ID
  left join (select count(1) cnt ,DIMO_BATCH_NO from KS_PROD_DIAPHRAGM_ZMX_RECORD
      group by DIMO_BATCH_NO) t4 on t4.DIMO_BATCH_NO=t1.DIMO_BATCH_NO
     where 1=1
     <isNotNull prepend="" property="id"> 
		       AND t1.id = #id#
	</isNotNull>
     <isNotNull prepend="" property="dimoType"> 
		       AND t1.dimo_Type = #dimoType#
	</isNotNull>
	<isNotNull prepend="" property="teamId"> 
		       AND T1.TEAM_ID = #teamId#
	</isNotNull>
	<isNotNull prepend="" property="line"> 
		       AND T1.LINE = #line#
	</isNotNull>
	<isNotNull prepend="" property="productType"> 
		       AND T1.product_Type = #productType#
	</isNotNull>
	
	
	<isNotNull prepend = "and"  property = "productDtStart"> 
          to_char(T1.PRODUCT_DT,'yyyy-MM-dd')  &gt;=  #productDtStart#
     </isNotNull>
     <isNotNull prepend = "and"  property = "productDtEnd"> 
          to_char(T1.PRODUCT_DT,'yyyy-MM-dd')  &lt;=  #productDtEnd#
     </isNotNull>
      <isNotNull prepend="" property="dimoBatchNo"> 
		       AND T1.DIMO_BATCH_NO = #dimoBatchNo#
	</isNotNull>
	<isNotNull prepend="" property="dimoBatchNo2"> 
		       AND T1.DIMO_BATCH_NO like '%' || #dimoBatchNo2# || '%'
	</isNotNull>
	<isNotNull prepend="and" property="supId"> 
		       t1.SUP_ID = #supId#
	</isNotNull>
	<isNotNull prepend="" property="zmyBatchNo2"> 
		       AND T1.ZMY_BATCH_NO like '%' || #zmyBatchNo2# || '%'
	</isNotNull>
	<isNotNull prepend="" property="wfBatchNo2"> 
		       AND T1.WF_BATCH_NO like '%' || #wfBatchNo2# || '%'
	</isNotNull><isNotNull prepend="" property="createName"> 
		       AND t1.CREATE_NAME like '%' || #createName# || '%'
	</isNotNull>
	ORDER BY t1.CREATE_TIME desc
     </select>
  
     </sqlMap>